[{"path":"https://spang-lab.github.io/FastRet/articles/Contributing.html","id":"making-edits","dir":"Articles","previous_headings":"","what":"Making Edits","title":"Contributing","text":"Things can update, : Function code folder R Function documentation folder R Package documentation folder vignettes Test cases folder tests Dependencies file DESCRIPTION Authors file DESCRIPTION Whenever update things, run commands check everything still working expected: steps, can push changes Github.","code":"devtools::document() # Build files in man folder devtools::spell_check() # Check spelling (add false positives to inst/WORDLIST) urlchecker::url_check() # Check URLs devtools::test() # Execute tests from tests folder toscutil::check_pkg_docs() # Check function documentation for missing tags devtools::check() # Check package formalities devtools::install() # Install as required by next command pkgdown::build_site() # Build website in docs folder"},{"path":"https://spang-lab.github.io/FastRet/articles/Contributing.html","id":"releasing-to-cran","dir":"Articles","previous_headings":"","what":"Releasing to CRAN","title":"Contributing","text":"Whenever package maintainer wants release new version package CRAN, : Check whether release requirements fulfilled Use following commands final check package release CRAN","code":"# Check spelling and URLs. False positive findings of spell check should be # added to inst/WORDLIST. devtools::spell_check() urlchecker::url_check()  # Slower, but more realistic tests than devtools::check() rcmdcheck::rcmdcheck(   args = c(\"--no-manual\", \"--as-cran\"),   build_args = (\"--no-manual\"),   error_on = (\"warning\"),   check_dir = \"../FastRet-RCMDcheck\" ) devtools::check(   remote = TRUE,   manual = TRUE,   run_dont_test = TRUE )  # Check reverse dependencies. For details see: # https://r-pkgs.org/release.html#sec-release-revdep-checks revdepcheck::revdep_check(num_workers = 8)  # Send your package to CRAN's builder services. You should receive an e-mail # within about 30 minutes with a link to the check results. Checking with # check_win_devel is required by CRAN policy and will (also) be done as part # of CRAN's incoming checks. devtools::check_win_oldrelease() devtools::check_win_release() devtools::check_win_devel() devtools::check_mac_release()  # Use the following command to submit the package to CRAN of submit via the web # interface available at https://cran.r-project.org/submit.html. devtools::submit_cran()"},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"starting-the-gui","dir":"Articles","previous_headings":"","what":"Starting the GUI","title":"GUI Usage","text":"start GUI, install package run following command interactive R terminal: running code, see output like R console. means GUI now running can access via URL http://localhost:8080 browser. terminal supports , can also click displayed link.  default, GUI opens mode Train new Model. apply adjust pretrained models, select mode Predict Retention Time Adjust existing Model instead. information individual modes various input fields, click little question mark symbols next different input fields read following sections.","code":"FastRet::start_gui() Listening on http://localhost:8080"},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"train-new-model","dir":"Articles","previous_headings":"","what":"Train new Model","title":"GUI Usage","text":"mode Train new Model can upload excel files containing names, SMILES retention times metabolites measured specific chromatography column use data train predictive model. FastRet includes example Excel file retention times 442 metabolites measured reverse phase liquid chromatography column temperature 35 degree celsius flowrate 0.3ml/min. print file path excel file preview contents, enter following lines interactive R session: start model training, upload Excel file click Train Model button. Training model might take time, depending size training set. click Show console logs can see progress training process. Upon completion, performance measures table training dataset shown. details training process performance measures, see section Model-Training article Package-Internals.  use trained model predict retention times new molecules, : Save model clicking Save Model button Switch model Predict Retention Times Upload model mode Predict Retention Times Enter SMILES molecules want predict retention times Press Predict Retention Times detailed guide using FastRet GUI prediction given next section Predict Retention Times.","code":"path <- system.file(\"extdata\", \"RP.xlsx\", package = \"FastRet\") cat(path, \"\\n\", sep = \"\") #> /home/runner/work/_temp/Library/FastRet/extdata/RP.xlsx df <- openxlsx::read.xlsx(path, 1) head(df) #>     RT                                                    SMILES #> 1 3.34                                              CCC(C(=O)O)O #> 2 3.35                                     COC1=C(C=CC(=C1)CCN)O #> 3 2.11                                    C1=NC2=C(N1)C(=NC=N2)N #> 4 2.10          C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)O)O #> 5 3.13             C1C2C(C(C(O2)N3C=NC4=C3N=CN=C4N)O)OP(=O)(O1)O #> 6 2.07 C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)OP(=O)(O)O)O #>                                   NAME #> 1                2-HYDROXYBUTYRIC ACID #> 2                    3-METHOXYTYRAMINE #> 3                              ADENINE #> 4           ADENOSINE 5'-MONOPHOSPHATE #> 5 ADENOSINE 3',5'-CYCLIC MONOPHOSPHATE #> 6          ADENOSINE 3',5'-DIPHOSPHATE"},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"predict-retention-times","dir":"Articles","previous_headings":"","what":"Predict Retention Times","title":"GUI Usage","text":"mode, previously saved models can used make predictions new data. Click Browse button section Upload pretrained Model select model saved previous step Either enter SMILES molecule interest Input SMILES text field Click Browse button section Upload SMILES xlsx select Excel file containing columns NAME SMILES Click button Predict bottom side bar","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"adjusting-existing-model","dir":"Articles","previous_headings":"","what":"Adjusting existing model","title":"GUI Usage","text":"measured metabolites new experiment setup also measured original setup, can use method adjust model new column. , switch mode Adjust existing Model upload model want adjust. upload Excel file containing retention times metabolites measured new column. Excel file contain columns NAME, SMILES RT. clicking Adjust Model button, model adjusted can use predict retention times new molecules measured new column.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"selective-measuring","dir":"Articles","previous_headings":"","what":"Selective Measuring","title":"GUI Usage","text":"mode calculates, given data set, best k molecules measured retention time prediction new experiment setup. uses combination Ridge Regression k-means determine best representatives dataset. Representatives well corresponding clusters can downloaded afterwards excel file. step used predictive model /data set want adjust work new column adjusted chromatographic properties gradient, temperature, etc.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Installation.html","id":"install-java-development-kit-jdk","dir":"Articles","previous_headings":"","what":"Install Java Development Kit (JDK)","title":"Installation","text":"FastRet uses rJava package, requires Java Development Kit (JDK) version 11 higher. can test whether java sufficiently high version JDK already installed system entering following command terminal. suitable JDK installed, can download install various vendors Adoptium Working Group Azul. list vendors providing JDKs, see whichjdk.com. installing JDK, things look , e.g.: Windows users activate update “JavaSoft registry keys” installation process. necessary rJava package find SDK installation. Depending SDK vendor choose, option might named differently. macOS users must use least R-4.1.2. Linux users run R CMD javareconf installing JDK make sure R can find JDK.","code":"java -version"},{"path":"https://spang-lab.github.io/FastRet/articles/Installation.html","id":"install-the-r-package-manager-pak","dir":"Articles","previous_headings":"","what":"Install the R package manager pak","title":"Installation","text":"can done entering following command R session:","code":"install.packages(\"pak\")"},{"path":"https://spang-lab.github.io/FastRet/articles/Installation.html","id":"install-fastret","dir":"Articles","previous_headings":"","what":"Install FastRet","title":"Installation","text":"install FastRet GitHub repository, enter following command R session:","code":"pak::pkg_install(\"FastRet\")"},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/articles/Installation.html","id":"java_home-cannot-be-determined-from-the-registry","dir":"Articles","previous_headings":"Troubleshooting","what":"JAVA_HOME cannot be determined from the Registry","title":"Installation","text":"error message JAVA_HOME determined Registry indicates rJava package find JDK installation. can cause errors ERROR: lazy loading failed package 'FastRet' trying load FastRet. See rJava installation fails possible solutions.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Installation.html","id":"rjava-installation-fails","dir":"Articles","previous_headings":"Troubleshooting","what":"rJava installation fails","title":"Installation","text":"installation rJava package fails: Make sure suitable JDK installed system, described Install Java Development Kit (JDK). Reinstall rJava package entering following command R session: install.packages(\"rJava\"). Run library(\"rJava\") ensure package can loaded. doesn’t solve problem, look Troubleshooting Guide rJava package.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"train-new-model","dir":"Articles","previous_headings":"","what":"Train new Model","title":"Old Introduction","text":"Staying mode “Train new Model” can upload previously saved excel file start training regression model. might take time depending size training set. due process calculating chemical descriptors rcdk. top right can see loading symbol process still running. training complete, boxplot performance measures well scatterplot predicted~actual retention time shown. can used get first impression performance can expected.  want utilize trained model new data, first save model reload “Utilize Model” category. model download trained whole data set without validation set. performance measures boxplot evaluated using cross validation.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"utilize-model-to-predict-on-new-data","dir":"Articles","previous_headings":"","what":"Utilize Model to predict on new data","title":"Old Introduction","text":"mode previously saved model can used predict new data. data can either provided input single SMILES whole .xlsx file .","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"adjusting-measurements-using-a-linear-model","dir":"Articles","previous_headings":"Utilize Model to predict on new data","what":"Adjusting measurements using a linear model","title":"Old Introduction","text":"measured metabolites new experiment setup also measured original setup, can use method adjust models prediction linear model. Simply check “Use measured metabolites adjust Prediction” upload Excel file corresponding SMILES/retention time data. click “Analyze Linear Model” scatter plot shown, displaying old vs new retention times measured metabolites. plot helps decide components linear model select.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"selective-measuring","dir":"Articles","previous_headings":"","what":"Selective Measuring","title":"Old Introduction","text":"mode calculates, given data set, best k molecules measured retention time prediction new experiment setup. uses combination Ridge Regression k-means determine best representatives dataset. Representatives well corresponding clusters can downloaded afterwards excel file. step used predictive model /data set want use new column/gradient/temperature… combination. providing excel file SMILES, NAME RT custom k can simply start process export another excel file show clusters well metabolites.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Package-Internals.html","id":"model-training","dir":"Articles","previous_headings":"","what":"Model Training","title":"Package Internals","text":"Model training implemented train_model function. first tries several different parameter values cross validation, remembers best parameter value uses value train final model full dataset. details see function documentation train_model.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Package-Internals.html","id":"reactive-graph","dir":"Articles","previous_headings":"","what":"Reactive Graph","title":"Package Internals","text":"FastRet reactive web app, means calculations triggered reaction user inputs. reactive graphs FastRet’s four modes shown , Action buttons shown red rectangles Upload buttons shown orange rectangles inputs shown green rectangles Intermediate calculations shown violet rectangles Outputs shown blue rectangles Synchronous functions shown white rectangles two lines left right side Asynchronous functions shown hexagons Red arrows one node another indicating first node triggers second node Green arrows one node another indicating first node holds input value second node Blue arrows one node another indicating first node writes output value second node","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christian Amesoeder. Author, copyright holder. Marian Schoen. Author, copyright holder. Tobias Schmidt. Author, maintainer, copyright holder. Fadi Fadil. Contributor, copyright holder. Katja Dettmer. Thesis advisor, copyright holder. Peter Oefner. Thesis advisor, copyright holder.","code":""},{"path":"https://spang-lab.github.io/FastRet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Amesoeder C, Schoen M, Schmidt T (2025). FastRet: Retention Time Prediction Liquid Chromatography. R package version 1.2.1, https://github.com/spang-lab/FastRet/.","code":"@Manual{,   title = {FastRet: Retention Time Prediction in Liquid Chromatography},   author = {Christian Amesoeder and Marian Schoen and Tobias Schmidt},   year = {2025},   note = {R package version 1.2.1},   url = {https://github.com/spang-lab/FastRet/}, }"},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":null,"dir":"","previous_headings":"","what":"GitHub Copilot Instructions for FastRet","title":"GitHub Copilot Instructions for FastRet","text":"Important: file kept date whenever update code made.","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"project-overview","dir":"","previous_headings":"","what":"Project Overview","title":"GitHub Copilot Instructions for FastRet","text":"FastRet R package predicting retention times liquid chromatography. provides comprehensive framework training custom models specific chromatography columns, predicting retention times using existing models, adjusting existing models account altered experimental conditions.","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"key-features","dir":"","previous_headings":"Project Overview","what":"Key Features","title":"GitHub Copilot Instructions for FastRet","text":"Train new predictive models specific chromatography columns Use pre-trained models predict retention times molecules Adjust pre-trained models accommodate modifications chromatography columns Selective measuring optimal subset selection molecules re-measurement Graphical user interface (GUI) easy interaction Command-line interface (CLI) programmatic usage","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"technical-details","dir":"","previous_headings":"Project Overview","what":"Technical Details","title":"GitHub Copilot Instructions for FastRet","text":"Primary Language: R (≥ 4.1.0) Dependencies: Uses chemical descriptors (rCDK), machine learning (glmnet, xgboost), clustering (cluster), web interface (shiny) Models Supported: LASSO, Ridge Regression, XGBoost (GBTree) Chemical Descriptors: 241 features calculated using rCDK version 2.9 GUI Framework: Shiny background processing using Extended Tasks Caching: RAM disk caching chemical descriptors","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"core-r-package-structure","dir":"","previous_headings":"Folder Structure","what":"Core R Package Structure","title":"GitHub Copilot Instructions for FastRet","text":"app.R - GUI application setup configuration data.R - Data loading functions lazy-loaded datasets getcds.R - Chemical descriptor calculation caching train.R - Model training, adjustment, prediction functions plot.R - Plotting visualization functions prepro.R - Data preprocessing feature engineering sm.R - Selective measuring (clustering-based subset selection) server.R - Shiny server logic ui.R - Shiny user interface components util.R - Utility functions imports","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"data-and-assets","dir":"","previous_headings":"Folder Structure","what":"Data and Assets","title":"GitHub Copilot Instructions for FastRet","text":"data/ - Package datasets (RP.rda) extdata/ - Example datasets (RP.xlsx, RP_adj.xlsx, models) cachedata/ - Pre-computed chemical descriptors (CDs.rds)","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"documentation-and-testing","dir":"","previous_headings":"Folder Structure","what":"Documentation and Testing","title":"GitHub Copilot Instructions for FastRet","text":"man/ - Generated R documentation (.Rd files) tests/testthat/ - Test suite covering major functions CLI-Usage.Rmd - Command-line interface guide GUI-Usage.Rmd - Graphical interface guide Installation.Rmd - Installation instructions Contributing.Rmd - Development guidelines Package-Internals.Rmd - Technical documentation","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"development-and-deployment","dir":"","previous_headings":"Folder Structure","what":"Development and Deployment","title":"GitHub Copilot Instructions for FastRet","text":"scripts/ - Build configuration scripts datasets/ - Dataset management models/ - Model artifacts pdfs/ - Generated plots documentation","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"core-workflow-functions","dir":"","previous_headings":"Key Functionality","what":"Core Workflow Functions","title":"GitHub Copilot Instructions for FastRet","text":"preprocess_data() - Calculates chemical descriptors, removes NAs near-zero variance features, adds polynomial/interaction terms train_frm() - Trains LASSO, Ridge, XGBoost models cross-validation predict.frm() - Predicts retention times new molecules adjust_frm() - Adjusts existing models new chromatography conditions selective_measuring() - Uses PAM clustering select optimal subset re-measurement","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"chemical-descriptors-system","dir":"","previous_headings":"Key Functionality","what":"Chemical Descriptors System","title":"GitHub Copilot Instructions for FastRet","text":"getCDs() - Main function chemical descriptor calculation parallel processing getCDsFor1Molecule() - Single molecule descriptor calculation caching ram_cache - Environment RAM-based caching descriptors CDNames - List chemical descriptor classes used CDFeatures - 241 feature names corresponding calculated descriptors","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"gui-components","dir":"","previous_headings":"Key Functionality","what":"GUI Components","title":"GitHub Copilot Instructions for FastRet","text":"start_gui() - Launches Shiny application fastret_app() - Creates Shiny app object Four main modes: Train Model, Predict RT, Selective Measuring, Adjust Model Background processing using futures Extended Tasks","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"data-management","dir":"","previous_headings":"Key Functionality","what":"Data Management","title":"GitHub Copilot Instructions for FastRet","text":"RP - Primary dataset (442 metabolites RT, SMILES, NAME) read_rp_xlsx(), read_rpadj_xlsx() - Data loading functions read_retip_hilic_data() - External dataset integration Disk RAM caching system chemical descriptors","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"roxygen2-documentation","dir":"","previous_headings":"Coding Guidelines","what":"Roxygen2 Documentation","title":"GitHub Copilot Instructions for FastRet","text":"Always start tags, even title description: #' @title ... instead #' ... Every function must fully documented @param, @return, @examples, @keywords Use @export public functions, @noRd internal functions","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"code-style","dir":"","previous_headings":"Coding Guidelines","what":"Code Style","title":"GitHub Copilot Instructions for FastRet","text":"Never use pipe operator (|> %>%) Functions stay 25 lines possible Short variable names preferred (e.g., x, y vectors, X, Y 2D objects) Line limit 80 characters recommended Maximum indentation 2 levels - avoid deep nesting Create helper variables instead deep nesting Short, readable function names like sum, sort, etc. can nested","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"function-design","dir":"","previous_headings":"Coding Guidelines","what":"Function Design","title":"GitHub Copilot Instructions for FastRet","text":"Avoid deep nesting functions -else structures Prefer creation helper variables Short, readable function names like sum, sort can nested Use helper functions break complex operations Validate inputs function start","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"messaging-and-logging","dir":"","previous_headings":"Coding Guidelines","what":"Messaging and Logging","title":"GitHub Copilot Instructions for FastRet","text":"Use catf instead message, cat, print info messages execution catf supports sprintf-style formatting timestamps Use verbose parameters control output levels (0=silent, 1=progress, 2=detailed)","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"parallel-processing","dir":"","previous_headings":"Coding Guidelines","what":"Parallel Processing","title":"GitHub Copilot Instructions for FastRet","text":"Support nw (number workers) parameters parallelizable operations Handle Windows limitations (set nw=1 automatically) Use mclapply simple parallelization, makeCluster complex cases","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"error-handling","dir":"","previous_headings":"Coding Guidelines","what":"Error Handling","title":"GitHub Copilot Instructions for FastRet","text":"Validate function inputs early descriptive error messages Use stop() clear, actionable error messages Handle edge cases (empty data, missing columns, etc.)","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"markdown-and-rmarkdown-style","dir":"","previous_headings":"Coding Guidelines","what":"Markdown and RMarkdown Style","title":"GitHub Copilot Instructions for FastRet","text":"Empty line headings - Always include empty line section headings Empty lines around lists - Add empty lines bullet point numbered lists Consistent list formatting - Use - unordered lists, maintain proper indentation Code block formatting - Use triple backticks language specification applicable Table formatting - Use proper table syntax header separators","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"testing-and-development","dir":"","previous_headings":"Coding Guidelines","what":"Testing and Development","title":"GitHub Copilot Instructions for FastRet","text":"Comprehensive test coverage using testthat Use pkg_file() package-relative file paths Development mode support start_gui_in_devmode()","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"running-tests","dir":"","previous_headings":"Coding Guidelines > Testing and Development","what":"Running Tests","title":"GitHub Copilot Instructions for FastRet","text":"Tests can executed several ways: Run tests: devtools::test() Run specific test file: testthat::test_file(\"tests/testthat/test-getCDs.R\") Run specific test file full path: testthat::test_file(\"c:/Users/tobi/Repos/github/spang/fastret/FastRet/tests/testthat/test-getCDs.R\") Important: Always run devtools::load_all() executing tests ensure latest code changes loaded. Critical Parallel Tests: running tests involve parallel functionality (multiple workers), package must properly installed using devtools::install(). spawned subprocesses use library() access package functions load installed version rather development version loaded devtools::load_all(). Failure install result “argument ‘FUN’ missing” errors parallel workers find functions exist dev version installed version. Logging Test Output: capture test results analysis, use:","code":"# In R terminal devtools::load_all() devtools::test() |> writeLines(\"test.log\")  # Or using system commands (Windows PowerShell) Rscript -e \"devtools::load_all(); devtools::test()\" | Tee-Object -FilePath test.log  # Or using system commands (Unix/Linux) Rscript -e \"devtools::load_all(); devtools::test()\" | tee test.log"},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"test-writing-guidelines","dir":"","previous_headings":"Coding Guidelines > Testing and Development","what":"Test Writing Guidelines","title":"GitHub Copilot Instructions for FastRet","text":"Run tests every code change - Tests always executed making changes codebase Every new function needs tests - new functions must corresponding test cases Speed requirement: Tests must simple possible finish within milliseconds Performance comments: test made faster, add explanation comment explaining Use subsets: Use small data subsets (e.g., RP[1:5, ] instead full dataset) speed Test structure: Follow standard testthat pattern:","code":"test_that(\"function_name works correctly\", {     # Setup     # Test execution       # Assertions with expect_*() })"},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"test-performance-patterns","dir":"","previous_headings":"Coding Guidelines > Testing and Development","what":"Test Performance Patterns","title":"GitHub Copilot Instructions for FastRet","text":"Cache removal testing: Use helper functions like remove_from_cache() test cached uncached scenarios Timing assertions: Include expect_true(runtime < threshold) ensure performance requirements Skip expensive tests CRAN: Use skip_on_cran() tests require significant resources","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"common-test-issues-and-solutions","dir":"","previous_headings":"Coding Guidelines > Testing and Development","what":"Common Test Issues and Solutions","title":"GitHub Copilot Instructions for FastRet","text":"Function Found Errors (argument \"FUN\" missing, default): - Problem: occurs lapply() similar functions find function called - Common causes: Function exported, missing imports, function moved different file - Solution: Ensure required functions properly exported @export available namespace - Example: getCDsFor1Molecule function must exported use parallel processing Row Names Errors (invalid 'row.names' length): - Problem: Attempting set row names data structure mismatched dimensions - Common causes: Cache structure changes, data frame dimension mismatches - Solution: Ensure row names match actual number rows data structure Cache Structure Issues: - Problem: Tests failing cache system refactoring (matrix vs. list structure) - Solution: Update test helper functions like remove_from_cache() match new cache structure - Check: Verify ram_cache$CDs structure matches expectations test setup Missing Dependencies Tests: - Problem: Tests fail due missing variables functions - Solution: Ensure dependencies loaded devtools::load_all() running tests - Check: Variables like read_disk, write_disk must properly defined defaulted","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"model-training-pattern","dir":"","previous_headings":"Development Patterns","what":"Model Training Pattern","title":"GitHub Copilot Instructions for FastRet","text":"","code":"# 1. Validate input data validate_inputdata(df, require = c(\"RT\", \"SMILES\", \"NAME\"))  # 2. Preprocess (add chemical descriptors) df <- preprocess_data(df, verbose = verbose, nw = nw)  # 3. Set up cross-validation folds <- caret::createFolds(y = df$RT, k = nfolds)  # 4. Train models in parallel models <- mclapply(seq_along(folds), mc.cores = nw, function(i) {     train_idx <- unname(unlist(folds[-i]))     test_idx <- folds[[i]]     fit_model(df[train_idx, ]) })  # 5. Create final model on full data model <- fit_model(df)  # 6. Return structured frm object frm <- list(model = model, df = df, cv = cv) class(frm) <- \"frm\""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"chemical-descriptor-pattern","dir":"","previous_headings":"Development Patterns","what":"Chemical Descriptor Pattern","title":"GitHub Copilot Instructions for FastRet","text":"","code":"# 1. Check RAM cache first if (smi %in% rownames(ram_cache$CDs)) {     return(ram_cache$CDs[smi, ]) }  # 2. Calculate descriptors using rCDK obj <- rcdk::parse.smiles(smi)[[1]] rcdk::convert.implicit.to.explicit(obj) rcdk::generate.2d.coordinates(obj) cds <- rcdk::eval.desc(obj, CDNames, verbose = FALSE)  # 3. Cache results ram_cache$CDs[smi, ] <- cds"},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"gui-development-pattern","dir":"","previous_headings":"Development Patterns","what":"GUI Development Pattern","title":"GitHub Copilot Instructions for FastRet","text":"Use Extended Tasks background processing Support multiple workers parallel operations Implement progress indicators console output Handle user input validation error display","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"s3-classes","dir":"","previous_headings":"Key Classes and Objects","what":"S3 Classes","title":"GitHub Copilot Instructions for FastRet","text":"Methods: predict.frm(), plotting functions","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"important-environments","dir":"","previous_headings":"Key Classes and Objects","what":"Important Environments","title":"GitHub Copilot Instructions for FastRet","text":"$CDs - Data frame cached descriptors (SMILES rownames) $CDRowNr - List mapping SMILES row numbers","code":""},{"path":"https://spang-lab.github.io/FastRet/copilot-instructions.html","id":"constants","dir":"","previous_headings":"Key Classes and Objects","what":"Constants","title":"GitHub Copilot Instructions for FastRet","text":"CDNames - Chemical descriptor class names (44 descriptors) CDFeatures - Feature names (241 features total) startModes - GUI mode options strategies - Parallel processing strategies package represents mature, well-tested system retention time prediction programmatic interactive interfaces. contributing, maintain existing patterns caching, parallel processing, error handling, documentation.","code":""},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"fastret","dir":"","previous_headings":"","what":"Retention Time Prediction in Liquid Chromatography","title":"Retention Time Prediction in Liquid Chromatography","text":"FastRet R package predicting retention times liquid chromatography. can used R console graphical user interface (GUI). package’s key features include ability Train new predictive models specific chromatography column Use pre-trained models predict retention times molecules Adjust pre-trained models accommodate modifications chromatography columns","code":""},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retention Time Prediction in Liquid Chromatography","text":"can install development version FastRet GitHub entering following commands R session: details see Installation.","code":"if (Sys.which(\"java\")[1] == \"\") stop(\"Please install a Java SDK first.\") install.packages(\"pak\") pak::pkg_install(\"spang-lab/FastRet\")"},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Retention Time Prediction in Liquid Chromatography","text":"easiest way use FastRet GUI. start GUI, install package run following command interactive R terminal: running code, see output like R console. means GUI now running can access via URL http://localhost:8080 browser. terminal supports , can also just click displayed link.  default, GUI opens Mode Train new Model. apply adjust pretrained models, select mode Predict Retention Time Adjust existing Model instead. information individual modes various input fields, click little question mark symbols next different input fields look documentation page GUI Usage.","code":"FastRet::start_gui() Listening on http://localhost:8080"},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Retention Time Prediction in Liquid Chromatography","text":"FastRet’s documentation available spang-lab.github.io/FastRet. includes pages GUI Usage CLI Usage Package Internals Contribution Guidelines Function Reference","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemical Descriptor Features — CDFeatures","title":"Chemical Descriptor Features — CDFeatures","text":"Vector containing feature names chemical descriptors listed CDNames.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chemical Descriptor Features — CDFeatures","text":"","code":"CDFeatures"},{"path":"https://spang-lab.github.io/FastRet/reference/CDFeatures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chemical Descriptor Features — CDFeatures","text":"object class character length 241.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemical Descriptors Names — CDNames","title":"Chemical Descriptors Names — CDNames","text":"object contains names various chemical descriptors.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chemical Descriptors Names — CDNames","text":"","code":"CDNames"},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chemical Descriptors Names — CDNames","text":"object class character length 45.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chemical Descriptors Names — CDNames","text":"One descriptor can associated multiple features, e.g. BCUT descriptor corresponds following features: BCUTw.1l, BCUTw.1h, BCUTc.1l, BCUTc.1h, BCUTp.1l, BCUTp.1h. descriptors produce warnings certain molecules., e.g. \"AtomType null found\" \"Molecule must 3D coordinates\" return NA cases. Descriptors produce NAs test datasets excluded. see descriptors produce NAs, run analyzeCDNames. \"LongestAliphaticChain\" descriptors sometimes even produces Error: segfault C stack overflow error, e.g. SMILES c1ccccc1C(Cl)(Cl)Cl (== rcdk::bpdata$SMILES[200]) using OpenJDK Runtime Environment (build 11.0.23+9-post-Ubuntu-1ubuntu122.04.1). Therefore, descriptor also excluded.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chemical Descriptors Names — CDNames","text":"","code":"str(CDNames) #>  chr [1:45] \"org.openscience.cdk.qsar.descriptors.molecular.FractionalCSP3Descriptor\" ..."},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":null,"dir":"Reference","previous_headings":"","what":"Retention Times (RT) measured on a Reverse Phase (RP) Column — RP","title":"Retention Times (RT) measured on a Reverse Phase (RP) Column — RP","text":"Retention time data reverse phase liquid chromatography measured temperature 35\\(^\\circ\\)C flowrate 0.3ml/min. data available xlsx file package. read R use read_rp_xlsx(). @format dataframe 442 metabolites following columns: RT Retention time SMILES SMILES notation metabolite NAME Name metabolite","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retention Times (RT) measured on a Reverse Phase (RP) Column — RP","text":"","code":"RP"},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Retention Times (RT) measured on a Reverse Phase (RP) Column — RP","text":"object class data.frame 442 rows 3 columns.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Retention Times (RT) measured on a Reverse Phase (RP) Column — RP","text":"Measured Institute Functional Genomics University Regensburg.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust an existing FastRet model for use with a new column — adjust_frm","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"goal function train model predicts RT_ADJ (retention time measured new, adjusted column) RT (retention time measured original column) attach \"adjustmodel\" existing FastRet model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"","code":"adjust_frm(   frm = train_frm(),   new_data = read_rpadj_xlsx(),   predictors = 1:6,   nfolds = 5,   verbose = 1 )"},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"frm object class frm returned train_frm(). new_data Dataframe columns \"RT\", \"NAME\", \"SMILES\" optionally set chemical descriptors. predictors Numeric vector specifying predictors include model addition RT. Available options : 1=RT, 2=RT^2, 3=RT^3, 4=log(RT), 5=exp(RT), 6=sqrt(RT). nfolds integer representing number folds cross validation. verbose logical value indicating whether print progress messages.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"object class frm, list following elements: model: list containing details original model. df: data frame used training model. cv: list containing cross validation results. seed: seed used random number generation. version: version FastRet package used train model. adj: list containing details adjusted model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"","code":"frm <- read_rp_lasso_model_rds() new_data <- read_rpadj_xlsx() frmAdjusted <- adjust_frm(frm, new_data, verbose = 0)"},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Chemical Descriptors Names — analyzeCDNames","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"Analyze chemical descriptor names return dataframe names boolean column indicating values NA.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"","code":"analyzeCDNames(df, descriptors = rcdk::get.desc.names(type = \"all\"))"},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"df dataframe two mandatory columns: \"NAME\" \"SMILES\" descriptors Vector chemical descriptor names","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"dataframe two columns descriptor all_na. Column descriptor contains names chemical descriptors. Column all_na contains boolean value indicating values obtained corresponding descriptor NA.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"function used analyze chemical descriptor names identify descriptors produce NAs test datasets. function used generate CDNames object.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"","code":"X <- analyzeCDNames(df = head(RP, 2), descriptors = CDNames[1:2]) #> 2025-09-23 06:47:05.57 Descriptor 1/2 #> 2025-09-23 06:47:06.10 Descriptor 2/2"},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":null,"dir":"Reference","previous_headings":"","what":"catf function — catf","title":"catf function — catf","text":"Prints formatted string optional prefix end strings.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"catf function — catf","text":"","code":"catf(   ...,   prefix = .Options$FastRet.catf.prefix,   end = .Options$FastRet.catf.end )"},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"catf function — catf","text":"... Arguments passed sprintf string formatting. prefix function returning string used prefix. Default timestamp. end string used end message. Default newline character.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"catf function — catf","text":"return value. function called side effect printing message.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"catf function — catf","text":"","code":"catf(\"Hello, %s!\", \"world\") #> 2025-09-23 06:47:06.26 Hello, world! catf(\"Goodbye\", prefix = NULL, end = \"!\\n\") #> 2025-09-23 06:47:06.26 Goodbye!"},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect elements from a list of lists — collect","title":"Collect elements from a list of lists — collect","text":"Takes list lists inner list names. returns list element corresponds name inner list extracted inner list. Especially useful collecting results lapply.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect elements from a list of lists — collect","text":"","code":"collect(xx)"},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect elements from a list of lists — collect","text":"xx list lists inner list names.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect elements from a list of lists — collect","text":"list element corresponds name inner list extracted inner list.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect elements from a list of lists — collect","text":"","code":"xx <- lapply(1:3, function(i) list(a = i, b = i^2, c = i^3)) ret <- collect(xx)"},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":null,"dir":"Reference","previous_headings":"","what":"The FastRet GUI — fastret_app","title":"The FastRet GUI — fastret_app","text":"Creates FastRet GUI","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The FastRet GUI — fastret_app","text":"","code":"fastret_app(port = 8080, host = \"0.0.0.0\", reload = FALSE, nsw = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The FastRet GUI — fastret_app","text":"port port application listen host address application listen reload Whether reload application source code changes nsw number subworkers worker allowed start. higher number, faster individual tasks like model fitting can processed.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The FastRet GUI — fastret_app","text":"object class shiny.appobj.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The FastRet GUI — fastret_app","text":"","code":"x <- fastret_app() if (interactive()) shiny::runApp(x)"},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Chemical Descriptors for a list of molecules — getCDs","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"Calculate Chemical Descriptors (CDs) list molecules. Molecules can appear multiple times list.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"","code":"getCDs(df, verbose = 1, nw = 1, keepdf = TRUE)"},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"df dataframe two mandatory columns: \"NAME\" \"SMILES\" verbose 0: output, 1: progress, 2: progress warnings nw number workers parallel processing keepdf TRUE, cbind(df, CDs) returned. Else CDs.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"dataframe input columns (keepdf TRUE) chemical descriptors remaining columns.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"","code":"cds <- getCDs(head(RP, 3), verbose = 1, nw = 1) #> 2025-09-23 06:47:07.08 Finished calculating chemical descriptors in 0.01481462 secs"},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract predictor names from an 'frm' object — get_predictors","title":"Extract predictor names from an 'frm' object — get_predictors","text":"Extracts predictor names 'frm' object.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract predictor names from an 'frm' object — get_predictors","text":"","code":"get_predictors(frm = train_frm())"},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract predictor names from an 'frm' object — get_predictors","text":"frm object class 'frm' extract predictor names.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract predictor names from an 'frm' object — get_predictors","text":"character vector predictor names.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract predictor names from an 'frm' object — get_predictors","text":"","code":"frm <- read_rp_lasso_model_rds() get_predictors(frm) #>   [1] \"Fsp3\"             \"nSmallRings\"      \"nAromRings\"       #>   [4] \"nRingBlocks\"      \"nAromBlocks\"      \"nRings5\"          #>   [7] \"nRings6\"          \"tpsaEfficiency\"   \"Zagreb\"           #>  [10] \"XLogP\"            \"WPATH\"            \"WPOL\"             #>  [13] \"WTPT.1\"           \"WTPT.2\"           \"WTPT.3\"           #>  [16] \"WTPT.4\"           \"WTPT.5\"           \"MW\"               #>  [19] \"VAdjMat\"          \"TopoPSA\"          \"LipinskiFailures\" #>  [22] \"nRotB\"            \"topoShape\"        \"PetitjeanNumber\"  #>  [25] \"MDEC.12\"          \"MDEC.13\"          \"MDEC.22\"          #>  [28] \"MDEC.23\"          \"MDEC.33\"          \"MDEO.11\"          #>  [31] \"MDEO.12\"          \"MDEN.13\"          \"MDEN.22\"          #>  [34] \"MDEN.23\"          \"MLogP\"            \"nAtomP\"           #>  [37] \"nAtomLC\"          \"khs.sCH3\"         \"khs.ssCH2\"        #>  [40] \"khs.dsCH\"         \"khs.aaCH\"         \"khs.sssCH\"        #>  [43] \"khs.dssC\"         \"khs.aasC\"         \"khs.aaaC\"         #>  [46] \"khs.sNH2\"         \"khs.ssNH\"         \"khs.aaNH\"         #>  [49] \"khs.aaN\"          \"khs.aasN\"         \"khs.sOH\"          #>  [52] \"khs.dO\"           \"khs.ssO\"          \"khs.dsssP\"        #>  [55] \"Kier1\"            \"Kier2\"            \"HybRatio\"         #>  [58] \"nHBDon\"           \"nHBAcc\"           \"fragC\"            #>  [61] \"FMF\"              \"ECCEN\"            \"SP.0\"             #>  [64] \"SP.1\"             \"SP.2\"             \"SP.3\"             #>  [67] \"SP.4\"             \"SP.5\"             \"SP.6\"             #>  [70] \"SP.7\"             \"VP.1\"             \"VP.2\"             #>  [73] \"VP.3\"             \"VP.4\"             \"VP.5\"             #>  [76] \"VP.6\"             \"VP.7\"             \"SPC.4\"            #>  [79] \"SPC.5\"            \"SPC.6\"            \"VPC.4\"            #>  [82] \"VPC.5\"            \"VPC.6\"            \"SC.3\"             #>  [85] \"SC.4\"             \"SC.5\"             \"VC.3\"             #>  [88] \"VC.4\"             \"VC.5\"             \"SCH.5\"            #>  [91] \"SCH.6\"            \"SCH.7\"            \"VCH.5\"            #>  [94] \"VCH.6\"            \"VCH.7\"            \"C1SP2\"            #>  [97] \"C2SP2\"            \"C3SP2\"            \"C1SP3\"            #> [100] \"C2SP3\"            \"bpol\"             \"nB\"               #> [103] \"nBase\"            \"ATSp1\"            \"ATSp2\"            #> [106] \"ATSp3\"            \"ATSp4\"            \"ATSp5\"            #> [109] \"ATSm1\"            \"ATSm2\"            \"ATSm3\"            #> [112] \"ATSm4\"            \"ATSm5\"            \"nAtom\"            #> [115] \"nAromBond\"        \"naAromAtom\"       \"apol\"             #> [118] \"ALogP\"            \"ALogp2\"           \"AMR\"              #> [121] \"nAcid\"            \"nA\"               \"nG\""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize log directory — init_log_dir","title":"Initialize log directory — init_log_dir","text":"Initializes log directory session. creates new directory exist.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize log directory — init_log_dir","text":"","code":"init_log_dir(SE)"},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize log directory — init_log_dir","text":"SE list containing session information.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize log directory — init_log_dir","text":"Updates logdir element SE list path log directory.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize log directory — init_log_dir","text":"","code":"SE <- as.environment(list(session = list(token = \"asdf\"))) init_log_dir(SE) #> 2025-09-23 06:47:07.34 Start: init_log_dir #> 2025-09-23 06:47:07.34 Logdir: /tmp/RtmpBEqIEj/FastRet/asdf dir.exists(SE$logdir) #> [1] TRUE"},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":null,"dir":"Reference","previous_headings":"","what":"now — now","title":"now — now","text":"Returns current system time formatted according provided format string.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"now — now","text":"","code":"now(format = \"%Y-%m-%d %H:%M:%OS2\")"},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"now — now","text":"format string representing desired time format. Default \"%Y-%m-%d %H:%M:%OS2\".","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"now — now","text":"string representing current system time specified format.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"now — now","text":"","code":"now()            # e.g. \"2024-06-12 16:09:32.41\" #> [1] \"2025-09-23 06:47:07.49\" now(\"%H:%M:%S\")  # e.g. \"16:09:32\" #> [1] \"06:47:07\""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get package file — pkg_file","title":"Get package file — pkg_file","text":"Returns path file within FastRet package.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get package file — pkg_file","text":"","code":"pkg_file(path, mustWork = FALSE)"},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get package file — pkg_file","text":"path path file within package. mustWork TRUE, error thrown file exist.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get package file — pkg_file","text":"path file.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get package file — pkg_file","text":"","code":"path <- pkg_file(\"extdata/RP.xlsx\")"},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict retention times using a FastRet Model — predict.frm","title":"Predict retention times using a FastRet Model — predict.frm","text":"Predict retention times new data using FastRet Model (FRM).","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict retention times using a FastRet Model — predict.frm","text":"","code":"# S3 method for class 'frm' predict(object = train_frm(), df = object$df, adjust = NULL, verbose = 0, ...)"},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict retention times using a FastRet Model — predict.frm","text":"object object class frm returned train_frm(). df data.frame columns training data. adjust object adjusted using adjust_frm(), contain property object$adj. adjust TRUE, object$adj used adjust predictions obtained object$model. FALSE object$adj ignored. NULL, object$model used, available. verbose logical value indicating whether print progress messages. ... used. Required match generic signature predict().","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict retention times using a FastRet Model — predict.frm","text":"numeric vector predicted retention times.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict retention times using a FastRet Model — predict.frm","text":"","code":"object <- read_rp_lasso_model_rds() df <- head(RP) yhat <- predict(object, df)"},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess data — preprocess_data","title":"Preprocess data — preprocess_data","text":"Preprocess data can used input train_frm().","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess data — preprocess_data","text":"","code":"preprocess_data(   data,   degree_polynomial = 1,   interaction_terms = FALSE,   verbose = 1,   nw = 1,   rm_near_zero_var = TRUE,   rm_na = TRUE )"},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess data — preprocess_data","text":"data Dataframe columns RT, NAME, SMILES degree_polynomial Defines many polynomials get added (3 quadratic cubic terms get added). interaction_terms TRUE interaction terms get added data set. verbose 0 == output, 1 == show progress, 2 == show progress warnings nw number workers use parallel processing rm_near_zero_var logical value indicating whether remove near zero variance predictors. Setting TRUE can cause CV results overoptimistic, variance filtering done whole dataset, .e. information test folds used feature selection. rm_na logical value indicating whether remove NA values. Setting TRUE can cause CV results overoptimistic, filtering done whole dataset, .e. information test folds used feature selection.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess data — preprocess_data","text":"dataframe preprocessed data","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess data — preprocess_data","text":"","code":"data <- head(RP, 3) # Only use first three rows to speed up example runtime pre <- preprocess_data(data, verbose = 0)"},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the HILIC dataset from the Retip package — read_retip_hilic_data","title":"Read the HILIC dataset from the Retip package — read_retip_hilic_data","text":"Retip package installed, HILIC dataset read installation directory. , dataset downloaded https://github.com/oloBion/Retip/raw/master/data/HILIC.RData temporary file read .","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the HILIC dataset from the Retip package — read_retip_hilic_data","text":"","code":"read_retip_hilic_data(verbose = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the HILIC dataset from the Retip package — read_retip_hilic_data","text":"verbose Verbosity level. Set 1 enable progress messages, 0 suppress .","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the HILIC dataset from the Retip package — read_retip_hilic_data","text":"data frame containing Retip HILIC dataset.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read the HILIC dataset from the Retip package — read_retip_hilic_data","text":"Retip: Retention Time Prediction Compound Annotation Untargeted Metabolomics Paolo Bonini, Tobias Kind, Hiroshi Tsugawa, Dinesh Kumar Barupal, Oliver Fiehn Analytical Chemistry 2020 92 (11), 7515-7522 DOI: 10.1021/acs.analchem.9b05765","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the HILIC dataset from the Retip package — read_retip_hilic_data","text":"","code":"df <- read_retip_hilic_data(verbose = 0)"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"Read LASSO model trained RP dataset using train_frm().","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"","code":"read_rp_lasso_model_rds()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"frm object.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"","code":"frm <- read_rp_lasso_model_rds()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"Reads retention times reverse phase liquid chromatography experiment, performed 35\\(^\\circ\\)C flow rate 0.3 mL/min. data also available dataframe package; access directly, use RP.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"","code":"read_rp_xlsx()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"Measured Institute Functional Genomics University Regensburg.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"dataframe 442 metabolites columns RT, SMILES NAME.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"","code":"x <- read_rp_xlsx() all.equal(x, RP) #> [1] TRUE"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypothetical retention times — read_rpadj_xlsx","title":"Hypothetical retention times — read_rpadj_xlsx","text":"Subset data read_rp_xlsx() slight modifications simulate changes temperature /flowrate.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypothetical retention times — read_rpadj_xlsx","text":"","code":"read_rpadj_xlsx()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypothetical retention times — read_rpadj_xlsx","text":"dataframe 25 rows (metabolites) 3 columns: RT, SMILES NAME.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypothetical retention times — read_rpadj_xlsx","text":"","code":"# \\donttest{ x <- read_rpadj_xlsx() # }"},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":null,"dir":"Reference","previous_headings":"","what":"Selective Measuring — selective_measuring","title":"Selective Measuring — selective_measuring","text":"function adjust_frm() used modify existing FastRet models based changes chromatographic conditions. requires set molecules measured retention times original new column. function selects sensible subset molecules original dataset re-measurement. selection process includes: Generating chemical descriptors SMILES strings molecules. features used train_frm() adjust_frm(). Standardizing chemical descriptors zero mean unit variance. Training Ridge Regression model standardized chemical descriptors features retention times target variable. Scaling chemical descriptors coefficients Ridge Regression model. Clustering entire dataset, includes scaled chemical descriptors retention times. Returning clustering results, include cluster assignments, medoid indicators, raw data.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selective Measuring — selective_measuring","text":"","code":"selective_measuring(raw_data, k_cluster = 25, verbose = 1, seed = NULL)"},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selective Measuring — selective_measuring","text":"raw_data raw data processed. Must dataframe columns NAME, RT SMILES. k_cluster number clusters PAM clustering. verbose level verbosity. seed optional random seed reproducibility, set beginning function.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selective Measuring — selective_measuring","text":"list containing following elements: clustering: data frame columns RT, SMILES, NAME, CLUSTER IS_MEDOID. clobj: clustering object. object returned clustering function. Depends method parameter. coefs: coefficients Ridge Regression model. model: Ridge Regression model. df: preprocessed data. dfz: standardized features. dfzb: features scaled coefficients (betas) Ridge Regression model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selective Measuring — selective_measuring","text":"","code":"x <- selective_measuring(RP[1:50, ], k = 5, verbose = 0) # For the sake of a short runtime, only the first 50 rows of the RP dataset # were used in this example. In practice, you should always use the entire # dataset to find the optimal subset for re-measurement."},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the FastRet GUI — start_gui","title":"Start the FastRet GUI — start_gui","text":"Starts FastRet GUI","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the FastRet GUI — start_gui","text":"","code":"start_gui(port = 8080, host = \"0.0.0.0\", reload = FALSE, nw = 2, nsw = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start the FastRet GUI — start_gui","text":"port port application listen host address application listen reload Whether reload application source code changes nw number worker processes started. first worker always listens user input GUI. workers used handling long running tasks like model fitting clustering. nw 1, process used tasks, means GUI become unresponsive long running tasks. nsw number subworkers worker allowed start. higher number, faster individual tasks like model fitting can processed. value 1 means subprocesses run sequentially.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the FastRet GUI — start_gui","text":"shiny app. function returns shiny app can run interact model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start the FastRet GUI — start_gui","text":"set nw = 3 nsw = 4, least 16 cores, one core shiny main process. Three cores three worker processes 12 cores (3 * 4) subworkers. default case, nworkers = 2 nsw = 1, need 3 cores, nsw = 1 means subprocesses run sequentially.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start the FastRet GUI — start_gui","text":"","code":"if (interactive()) start_gui()"},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a new FastRet model (FRM) for retention time prediction — train_frm","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"Trains new model molecule SMILES predict retention times (RT) using specified method.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"","code":"train_frm(   df,   method = \"lasso\",   verbose = 1,   nfolds = 5,   nw = 1,   degree_polynomial = 1,   interaction_terms = FALSE,   rm_near_zero_var = TRUE,   rm_na = TRUE,   rm_ns = FALSE,   seed = NULL )"},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"df dataframe columns \"NAME\", \"RT\", \"SMILES\" optionally set chemical descriptors. chemical descriptors provided, calculated using function preprocess_data(). method string representing prediction algorithm. Either \"lasso\", \"ridge\" \"gbtree\". verbose logical value indicating whether print progress messages. nfolds integer representing number folds cross validation. nw integer representing number workers parallel processing. degree_polynomial integer representing degree polynomial. Polynomials specified degree included model. interaction_terms logical value indicating whether include interaction terms model. rm_near_zero_var logical value indicating whether remove near zero variance predictors. Setting TRUE can cause CV results overoptimistic, variance filtering done whole dataset, .e. information test folds used feature selection. rm_na logical value indicating whether remove NA values. Setting TRUE can cause CV results overoptimistic, filtering done whole dataset, .e. information test folds used feature selection. rm_ns logical value indicating whether remove chemical descriptors considered suitable linear regression based previous analysis independent dataset. Currently used. seed integer value set seed random number generation allow reproducible results.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"trained FastRet model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"","code":"system.time(m <- train_frm(RP[1:80, ], method = \"lasso\", nfolds = 2, nw = 1, verbose = 0)) #>    user  system elapsed  #>   0.290   0.011   0.301  # For the sake of a short runtime, only the first 80 rows of the RP dataset # are used in this example. In practice, you should always use the entire # training dataset for model training."},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add line end — withLineEnd","title":"Add line end — withLineEnd","text":"Checks string ends newline character. , newline character appended.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add line end — withLineEnd","text":"","code":"withLineEnd(x)"},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add line end — withLineEnd","text":"x string.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add line end — withLineEnd","text":"input string newline character end already present.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add line end — withLineEnd","text":"","code":"cat(withLineEnd(\"Hello\")) #> Hello"},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute an expression while redirecting output to a file — withSink","title":"Execute an expression while redirecting output to a file — withSink","text":"Execute expression redirecting output file","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute an expression while redirecting output to a file — withSink","text":"","code":"withSink(expr, logfile = tempfile(fileext = \".txt\"))"},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute an expression while redirecting output to a file — withSink","text":"expr expression execute logfile file redirect output . Default \"tmp.txt\".","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute an expression while redirecting output to a file — withSink","text":"result expression","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute an expression while redirecting output to a file — withSink","text":"","code":"logfile <- tempfile(fileext = \".txt\") withSink(logfile = logfile, expr = {   cat(\"Helloworld\\n\")   message(\"Goodbye\") }) #> Goodbye readLines(logfile) == c(\"Helloworld\", \"Goodbye\") #> [1]  TRUE FALSE"},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Try expression with predefined error message — withStopMessage","title":"Try expression with predefined error message — withStopMessage","text":"Executes expression prints error message fails","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try expression with predefined error message — withStopMessage","text":"","code":"withStopMessage(expr)"},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try expression with predefined error message — withStopMessage","text":"expr expression execute","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Try expression with predefined error message — withStopMessage","text":"result expression","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Try expression with predefined error message — withStopMessage","text":"","code":"f <- function(expr) {   val <- try(expr, silent = TRUE)   err <- if (inherits(val, \"try-error\")) attr(val, \"condition\") else NULL   if (!is.null(err)) value <- NULL   list(value = val, error = err) } ret <- f(log(\"a\")) # this error will not show up in the console ret <- f(withStopMessage(log(\"a\"))) # this error will show up in the console #> Error in log(\"a\") : non-numeric argument to mathematical function"},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute an expression with a timeout — withTimeout","title":"Execute an expression with a timeout — withTimeout","text":"Execute expression timeout","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute an expression with a timeout — withTimeout","text":"","code":"withTimeout(expr, timeout = 2)"},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute an expression with a timeout — withTimeout","text":"expr expression execute timeout timeout seconds. Default 2.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute an expression with a timeout — withTimeout","text":"result expression","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute an expression with a timeout — withTimeout","text":"","code":"withTimeout(      cat(\"This works\\n\"),      timeout = 0.2 ) #> This works try(silent = TRUE, withTimeout(     expr = {Sys.sleep(0.2); cat(\"This fails\\n\")},     timeout = 0.1 )) #> This fails"},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-121-","dir":"Changelog","previous_headings":"","what":"FastRet 1.2.1","title":"FastRet 1.2.1","text":"Add updated Measurements Measurements_v8.xlsx inst/extdata/. new list contains corrections old RP dataset plus 1660 new measurements measured total 18 different chromatographic environments. Reintroduced RAM caching (although hugely simplified).","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-120-","dir":"Changelog","previous_headings":"","what":"FastRet 1.2.0","title":"FastRet 1.2.0","text":"Added seed parameter selective_measuring() function reproducible clustering results Enhanced documentation train_frm() function Removed digest shinybusy dependencies Major refactoring caching system related functions Removed mock files inst/mockdata/ Removed objects: getCDsFor1Molecule(), get_cache_dir(), ram_cache (exported, declared internal) Added private function parLapply2 Added comprehensive GitHub Copilot instructions file Improved code organization documentation across multiple R files","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-115-","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.5","title":"FastRet 1.1.5","text":"Improved read_retip_hilic_data(): dataset now downloaded GitHub package installed. installed, dataset loaded directly. Internal Changes: Removed TODOS.md Bumped version 1.1.5 Moved data related functions util.R data.R Added README misc/datasets Added functions load_all() document() util.R Replaced xlsx readxl packages openxlsx","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-114-","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.4","title":"FastRet 1.1.4","text":"CRAN release: 2025-02-10 Added cache cleanup handler gets registered via reg.finalizer() upon package loading ensure cache directory removed doesn’t contain files persist R sessions. Added article installation details incl. troubleshooting section Improved function docs Improved examples removing donttest blocks Improved examples & tests using smaller example datasets reduce runtime","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-113-","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.3","title":"FastRet 1.1.3","text":"CRAN release: 2024-06-25 Moved patch.R R folder misc/scripts, excluded package build using .Rbuildignore. file conditionally sourced private function start_gui_in_devmode() available, allowing use development without including package. Added \\value tags mentioned .Rd files describing functions’ return values. Added Bonini et al. (2020) doi:10.1021/acs.analchem.9b05765 reference description part DESCRIPTION file, listing Related work. reference used documentation read_retip_hilic_data() ram_cache. additional references used package documentation. Added Fadi Fadil contributor. Fadi measured example datasets shipped FastRet. Added ORCID IDs contributors described CRAN’s checklist submissions.","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-112-","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.2","title":"FastRet 1.1.2","text":"Wrapped examples read_rp_xlsx() read_rpadj_xlsx() donttest prevent note “Examples CPU time > 2.5 times elapsed time: …”. now ’m pretty sure culprit xlsx package, uses java process reading file. Maybe switch openxlsx readxl future.","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-111-","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.1","title":"FastRet 1.1.1","text":"Improved examples preprocess_data() prevent note “Examples CPU time > 2.5 times elapsed time: preprocess_data (CPU=2.772, elapsed=0.788)”.","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-110-","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.0","title":"FastRet 1.1.0","text":"Added RAM caching getCDs()","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-103-","dir":"Changelog","previous_headings":"","what":"FastRet 1.0.3","title":"FastRet 1.0.3","text":"Added examples start_gui(), fastret_app(), getCDsFor1Molecule(), analyzeCDNames(), check_lm_suitabilitym(), plot_lm_suitability(), extendedTask(), selective_measuring(), train_frm(), adjust_frm(), get_predictors() Improved lots existing examples Added additional logging messages various places Submitted CRAN, rejected following examples caused least one following notes CRAN testing machines: (1) “CPU time > 5s”, (2) “CPU time > 2.5 times elapsed time”. context, “CPU time” calculated sum measured “user” “system” times.","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-102-","dir":"Changelog","previous_headings":"","what":"FastRet 1.0.2","title":"FastRet 1.0.2","text":"Improved github actions","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-101-","dir":"Changelog","previous_headings":"","what":"FastRet 1.0.1","title":"FastRet 1.0.1","text":"Improved github actions","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-100-","dir":"Changelog","previous_headings":"","what":"FastRet 1.0.0","title":"FastRet 1.0.0","text":"Completely refactored source code, e.g.: Added test suite covering important functions UI now uses Extended Tasks background processing, allowing GUI usage multiple users time clustering now uses Partitioning Around Medoids (PAM) instead k-means, faster much better suited use case training Lasso /XGBoost models longer done using caret using glmnet xgboost directly. new implementation much faster allows full control number workers started. Function getCDs now caches results Disk, making retrieval chemical descriptors much faster GUI now console element, showing progress background tasks like clustering model training GUI cleaner interface, lots options now hidden “Advanced” tab default displayed upon user request","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-0997-","dir":"Changelog","previous_headings":"","what":"FastRet 0.99.7","title":"FastRet 0.99.7","text":"Fixed R CMD check findings Fixed Github Actions Fixed Dockerfile","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-0996-","dir":"Changelog","previous_headings":"","what":"FastRet 0.99.6","title":"FastRet 0.99.6","text":"Added contact, privacy policy Fixed Dockerfile","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-0994-","dir":"Changelog","previous_headings":"","what":"FastRet 0.99.4","title":"FastRet 0.99.4","text":"Improved Github Actions Formatting source code","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-0993-","dir":"Changelog","previous_headings":"","what":"FastRet 0.99.3","title":"FastRet 0.99.3","text":"Reduce required R version DESCRIPTION 4.2 4.1 Added Dockerfile Fixed R CMD check warnings Fixed R CMD check action","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-0992-","dir":"Changelog","previous_headings":"","what":"FastRet 0.99.2","title":"FastRet 0.99.2","text":"Added documentation website : https://spang-lab.github.io/FastRet/","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-0991-","dir":"Changelog","previous_headings":"","what":"FastRet 0.99.1","title":"FastRet 0.99.1","text":"Initial version. Copy commit cd243aa82a56df405df8060b84535633cf06b692 Christian Amesöders Repository. (Christian wrote initial version FastRet part master thesis Institute functional Genomics, University Regensburg).","code":""}]
