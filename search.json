[{"path":"https://spang-lab.github.io/FastRet/articles/Contributing.html","id":"making-edits","dir":"Articles","previous_headings":"","what":"Making Edits","title":"Contributing","text":"Things can update, : Function code folder R Function documentation folder R Package documentation folder vignettes Test cases folder tests Dependencies file DESCRIPTION Authors file DESCRIPTION Whenever update things, run commands check everything still working expected: steps, can push changes Github.","code":"devtools::document() # Build files in man folder devtools::spell_check() # Check spelling (add false positives to inst/WORDLIST) urlchecker::url_check() # Check URLs devtools::test() # Execute tests from tests folder devtools::check() # Check package formalities devtools::install() # Install as required by next command pkgdown::build_site() # Build website in docs folder"},{"path":"https://spang-lab.github.io/FastRet/articles/Contributing.html","id":"releasing-to-cran","dir":"Articles","previous_headings":"","what":"Releasing to CRAN","title":"Contributing","text":"Whenever package maintainer wants release new version package CRAN, : Check whether release requirements fulfilled Use following commands final check package release CRAN","code":"# Check spelling and URLs. False positive findings of spell check should be # added to inst/WORDLIST. devtools::spell_check() urlchecker::url_check()  # Slower, but more realistic tests than devtools::check() rcmdcheck::rcmdcheck(args = c(\"--no-manual\", \"--as-cran\"), build_args = (\"--no-manual\"), error_on = (\"warning\"), check_dir = \"../FastRet-RCMDcheck\") devtools::check(remote = TRUE, manual = TRUE, run_dont_test = TRUE)  # Check reverse dependencies. For details see: # https://r-pkgs.org/release.html#sec-release-revdep-checks revdepcheck::revdep_check(num_workers = 8)  # Send your package to CRAN's builder services. You should receive an e-mail # within about 30 minutes with a link to the check results. Checking with # check_win_devel is required by CRAN policy and will (also) be done as part # of CRAN's incoming checks. devtools::check_win_oldrelease() devtools::check_win_release() devtools::check_win_devel() devtools::check_mac_release() rhub::rhub_check()  # Use the following command to submit the package to CRAN of submit via the web # interface available at https://cran.r-project.org/submit.html. devtools::submit_cran()"},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"starting-the-gui","dir":"Articles","previous_headings":"","what":"Starting the GUI","title":"GUI Usage","text":"start GUI, install package run following command interactive R terminal: running code, see output like R console. means GUI now running can access via URL http://localhost:8080 browser. terminal supports , can also click displayed link.  default, GUI opens mode Train new Model. apply adjust pretrained models, select mode Predict Retention Time Adjust existing Model instead. information individual modes various input fields, click little question mark symbols next different input fields read following sections.","code":"FastRet::start_gui() Listening on http://localhost:8080"},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"train-new-model","dir":"Articles","previous_headings":"","what":"Train new Model","title":"GUI Usage","text":"mode Train new Model can upload excel files containing names, SMILES retention times metabolites measured specific chromatography column use data train predictive model. FastRet includes example Excel file retention times 442 metabolites measured reverse phase liquid chromatography column temperature 35 degree celsius flowrate 0.3ml/min. print file path excel file preview contents, enter following lines interactive R session: start model training, upload Excel file click Train Model button. Training model might take time, depending size training set. click Show console logs can see progress training process. Upon completion, performance measures table training dataset shown. details training process performance measures, see section Model-Training article Package-Internals.  use trained model predict retention times new molecules, : Save model clicking Save Model button Switch model Predict Retention Times Upload model mode Predict Retention Times Enter SMILES molecules want predict retention times Press Predict Retention Times detailed guide using FastRet GUI prediction given next section Predict Retention Times.","code":"path <- system.file(\"extdata\", \"RP.xlsx\", package = \"FastRet\") cat(path, \"\\n\", sep = \"\") #> /home/runner/work/_temp/Library/FastRet/extdata/RP.xlsx df <- xlsx::read.xlsx(path, 1) head(df) #>     RT                                                    SMILES #> 1 3.34                                              CCC(C(=O)O)O #> 2 3.35                                     COC1=C(C=CC(=C1)CCN)O #> 3 2.11                                    C1=NC2=C(N1)C(=NC=N2)N #> 4 2.10          C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)O)O #> 5 3.13             C1C2C(C(C(O2)N3C=NC4=C3N=CN=C4N)O)OP(=O)(O1)O #> 6 2.07 C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)OP(=O)(O)O)O #>                                   NAME #> 1                2-HYDROXYBUTYRIC ACID #> 2                    3-METHOXYTYRAMINE #> 3                              ADENINE #> 4           ADENOSINE 5'-MONOPHOSPHATE #> 5 ADENOSINE 3',5'-CYCLIC MONOPHOSPHATE #> 6          ADENOSINE 3',5'-DIPHOSPHATE"},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"predict-retention-times","dir":"Articles","previous_headings":"","what":"Predict Retention Times","title":"GUI Usage","text":"mode, previously saved models can used make predictions new data. Click Browse button section Upload pretrained Model select model saved previous step Either enter SMILES molecule interest Input SMILES text field Click Browse button section Upload SMILES xlsx select Excel file containing columns NAME SMILES Click button Predict bottom side bar","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"adjusting-existing-model","dir":"Articles","previous_headings":"","what":"Adjusting existing model","title":"GUI Usage","text":"measured metabolites new experiment setup also measured original setup, can use method adjust model new column. , switch mode Adjust existing Model upload model want adjust. upload Excel file containing retention times metabolites measured new column. Excel file contain columns NAME, SMILES RT. clicking Adjust Model button, model adjusted can use predict retention times new molecules measured new column.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/GUI-Usage.html","id":"selective-measuring","dir":"Articles","previous_headings":"","what":"Selective Measuring","title":"GUI Usage","text":"mode calculates, given data set, best k molecules measured retention time prediction new experiment setup. uses combination Ridge Regression k-means determine best representatives dataset. Representatives well corresponding clusters can downloaded afterwards excel file. step used predictive model /data set want adjust work new column adjusted chromatographic properties gradient, temperature, etc.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"train-new-model","dir":"Articles","previous_headings":"","what":"Train new Model","title":"Old Introduction","text":"Staying mode “Train new Model” can upload previously saved excel file start training regression model. might take time depending size training set. due process calculating chemical descriptors rcdk. top right can see loading symbol process still running. training complete, boxplot performance measures well scatterplot predicted~actual retention time shown. can used get first impression performance can expected.  want utilize trained model new data, first save model reload “Utilize Model” category. model download trained whole data set without validation set. performance measures boxplot evaluated using cross validation.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"utilize-model-to-predict-on-new-data","dir":"Articles","previous_headings":"","what":"Utilize Model to predict on new data","title":"Old Introduction","text":"mode previously saved model can used predict new data. data can either provided input single SMILES whole .xlsx file .","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"adjusting-measurements-using-a-linear-model","dir":"Articles","previous_headings":"Utilize Model to predict on new data","what":"Adjusting measurements using a linear model","title":"Old Introduction","text":"measured metabolites new experiment setup also measured original setup, can use method adjust models prediction linear model. Simply check “Use measured metabolites adjust Prediction” upload Excel file corresponding SMILES/retention time data. click “Analyze Linear Model” scatter plot shown, displaying old vs new retention times measured metabolites. plot helps decide components linear model select.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Old-Intro.html","id":"selective-measuring","dir":"Articles","previous_headings":"","what":"Selective Measuring","title":"Old Introduction","text":"mode calculates, given data set, best k molecules measured retention time prediction new experiment setup. uses combination Ridge Regression k-means determine best representatives dataset. Representatives well corresponding clusters can downloaded afterwards excel file. step used predictive model /data set want use new column/gradient/temperature… combination. providing excel file SMILES, NAME RT custom k can simply start process export another excel file show clusters well metabolites.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Package-Internals.html","id":"model-training","dir":"Articles","previous_headings":"","what":"Model Training","title":"Package Internals","text":"Model training implemented train_model function. first tries several different parameter values cross validation, remembers best parameter value uses value train final model full dataset. details see function documentation train_model.","code":""},{"path":"https://spang-lab.github.io/FastRet/articles/Package-Internals.html","id":"reactive-graph","dir":"Articles","previous_headings":"","what":"Reactive Graph","title":"Package Internals","text":"FastRet reactive web app, means calculations triggered reaction user inputs. reactive graphs FastRet’s four modes shown , Action buttons shown red rectangles Upload buttons shown orange rectangles inputs shown green rectangles Intermediate calculations shown violet rectangles Outputs shown blue rectangles Synchronous functions shown white rectangles two lines left right side Asynchronous functions shown hexagons Red arrows one node another indicating first node triggers second node Green arrows one node another indicating first node holds input value second node Blue arrows one node another indicating first node writes output value second node","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christian Amesoeder. Author, copyright holder. Marian Schoen. Author, copyright holder. Tobias Schmidt. Author, maintainer, copyright holder. Fadi Fadil. Contributor. Katja Dettmer. Thesis advisor, copyright holder. Peter Oefner. Thesis advisor, copyright holder.","code":""},{"path":"https://spang-lab.github.io/FastRet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Amesoeder C, Schoen M, Schmidt T (2024). FastRet: Retention Time Prediction Liquid Chromatography. R package version 1.1.3, https://spang-lab.github.io/FastRet/, https://github.com/spang-lab/FastRet/.","code":"@Manual{,   title = {FastRet: Retention Time Prediction in Liquid Chromatography},   author = {Christian Amesoeder and Marian Schoen and Tobias Schmidt},   year = {2024},   note = {R package version 1.1.3, https://spang-lab.github.io/FastRet/},   url = {https://github.com/spang-lab/FastRet/}, }"},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"fastret","dir":"","previous_headings":"","what":"Retention Time Prediction in Liquid Chromatography","title":"Retention Time Prediction in Liquid Chromatography","text":"FastRet R package predicting retention times liquid chromatography. can used R console graphical user interface (GUI). package’s key features include ability Train new predictive models specific chromatography column Use pre-trained models predict retention times molecules Adjust pre-trained models accommodate modifications chromatography columns","code":""},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Retention Time Prediction in Liquid Chromatography","text":"can install development version FastRet GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"spang-lab/FastRet\", build_vignettes = TRUE)"},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Retention Time Prediction in Liquid Chromatography","text":"easiest way use FastRet GUI. start GUI, install package run following command interactive R terminal: running code, see output like R console. means GUI now running can access via URL http://localhost:8080 browser. terminal supports , can also just click displayed link.  default, GUI opens Mode Train new Model. apply adjust pretrained models, select mode Predict Retention Time Adjust existing Model instead. information individual modes various input fields, click little question mark symbols next different input fields look documentation page GUI Usage.","code":"FastRet::start_gui() Listening on http://localhost:8080"},{"path":"https://spang-lab.github.io/FastRet/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Retention Time Prediction in Liquid Chromatography","text":"FastRet’s documentation available spang-lab.github.io/FastRet. includes pages GUI Usage CLI Usage Package Internals Contribution Guidelines Function Reference","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemical Descriptors — CDFeatures","title":"Chemical Descriptors — CDFeatures","text":"Vectors containing feature names chemical descriptors listed CDNames.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chemical Descriptors — CDFeatures","text":"","code":"CDFeatures"},{"path":"https://spang-lab.github.io/FastRet/reference/CDFeatures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chemical Descriptors — CDFeatures","text":"object class character length 241.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemical Descriptors Names — CDNames","title":"Chemical Descriptors Names — CDNames","text":"object contains names various chemical descriptors.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chemical Descriptors Names — CDNames","text":"","code":"CDNames"},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Chemical Descriptors Names — CDNames","text":"object class character length 45.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chemical Descriptors Names — CDNames","text":"One descriptor can associated multiple features, e.g. BCUT descriptor corresponds following features: BCUTw.1l, BCUTw.1h, BCUTc.1l, BCUTc.1h, BCUTp.1l, BCUTp.1h. descriptors produce warnings certain molecules., e.g. \"AtomType null found\" \"Molecule must 3D coordinates\" return NA cases. Descriptors produce NAs test datasets excluded. see descriptors produce NAs, run analyzeCDNames. \"LongestAliphaticChain\" descriptors sometimes even produces Error: segfault C stack overflow error, e.g. SMILES c1ccccc1C(Cl)(Cl)Cl (== rcdk::bpdata$SMILES[200]) using OpenJDK Runtime Environment (build 11.0.23+9-post-Ubuntu-1ubuntu122.04.1). Therefore, descriptor also excluded.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/CDNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chemical Descriptors Names — CDNames","text":"","code":"str(CDNames) #>  chr [1:45] \"org.openscience.cdk.qsar.descriptors.molecular.FractionalCSP3Descriptor\" ..."},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":null,"dir":"Reference","previous_headings":"","what":"Retention Times (RT) Measured on a Reverse Phase (RP) Column — RP","title":"Retention Times (RT) Measured on a Reverse Phase (RP) Column — RP","text":"Retention time data reverse phase liquid chromatography measured temperature 35 degree flowrate 0.3ml/min. data available xlsx file package. read R use read_rp_xlsx().","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retention Times (RT) Measured on a Reverse Phase (RP) Column — RP","text":"","code":"RP"},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Retention Times (RT) Measured on a Reverse Phase (RP) Column — RP","text":"dataframe 442 metabolites following columns: RT Retention time SMILES SMILES notation metabolite NAME Name metabolite","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/RP.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Retention Times (RT) Measured on a Reverse Phase (RP) Column — RP","text":"Measured functional genomics lab University Regensburg.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust an existing FastRet model for use with a new column — adjust_frm","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"goal function train model predicts RT_ADJ (retention time measured new, adjusted column) RT (retention time measured original column) attach \"adjustmodel\" existing FastRet model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"","code":"adjust_frm(   frm = train_frm(),   new_data = read_rpadj_xlsx(),   predictors = 1:6,   nfolds = 5,   verbose = 1 )"},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"frm object class frm returned train_frm(). new_data Dataframe columns \"RT\", \"NAME\", \"SMILES\" optionally set chemical descriptors. predictors Numeric vector specifying predictors include model addition RT. Available options : 1=RT, 2=RT^2, 3=RT^3, 4=log(RT), 5=exp(RT), 6=sqrt(RT). nfolds integer representing number folds cross validation. verbose logical value indicating whether print progress messages.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"object class frm, list following elements: model: list containing details original model. df: data frame used training model. cv: list containing cross validation results. seed: seed used random number generation. version: version FastRet package used train model. adj: list containing details adjusted model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/adjust_frm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust an existing FastRet model for use with a new column — adjust_frm","text":"","code":"# \\donttest{ frm <- read_rp_lasso_model_rds() new_data <- read_rpadj_xlsx() frmAdjusted <- adjust_frm(frm, new_data, verbose = 0) # }"},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze Chemical Descriptors Names — analyzeCDNames","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"Analyze chemical descriptor names return dataframe names boolean column indicating values NA.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"","code":"analyzeCDNames(   df = read_rp_xlsx(),   descriptors = rcdk::get.desc.names(type = \"all\") )"},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"df dataframe two mandatory columns: \"NAME\" \"SMILES\" descriptors vector chemical descriptor names","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"dataframe two columns descriptor all_na. Column descriptor contains names chemical descriptors. Column all_na contains boolean value indicating values obtained corresponding descriptor NA.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"function used analyze chemical descriptor names identify descriptors produce NAs test datasets. function used generate CDNames object.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/analyzeCDNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze Chemical Descriptors Names — analyzeCDNames","text":"","code":"X <- analyzeCDNames(df = head(RP, 2), descriptors = CDNames[1:2]) #> 2024-06-24 13:42:24.56 Descriptor 1/2 #> 2024-06-24 13:42:24.68 Descriptor 2/2"},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":null,"dir":"Reference","previous_headings":"","what":"catf function — catf","title":"catf function — catf","text":"function prints formatted string optional prefix end strings.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"catf function — catf","text":"","code":"catf(   ...,   prefix = .Options$FastRet.catf.prefix,   end = .Options$FastRet.catf.end )"},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"catf function — catf","text":"... Arguments passed sprintf string formatting. prefix function returning string used prefix. Default timestamp. end string used end message. Default newline character.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"catf function — catf","text":"return value. function called side effect printing message.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/catf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"catf function — catf","text":"","code":"catf(\"Hello, %s!\", \"world\") #> 2024-06-24 13:42:24.83 Hello, world! catf(\"Goodbye\", prefix = NULL, end = \"!\\n\") #> 2024-06-24 13:42:24.83 Goodbye!"},{"path":"https://spang-lab.github.io/FastRet/reference/check_lm_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks which chemical descriptors are suitable for linear models — check_lm_suitability","title":"Checks which chemical descriptors are suitable for linear models — check_lm_suitability","text":"function checks chemical descriptors suitable use linear model. Chemical descriptors missing values, near-zero variance strong outlier values considered suitable.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/check_lm_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks which chemical descriptors are suitable for linear models — check_lm_suitability","text":"","code":"check_lm_suitability(df = read_retip_hilic_data(), verbose = FALSE, nw = 2)"},{"path":"https://spang-lab.github.io/FastRet/reference/check_lm_suitability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks which chemical descriptors are suitable for linear models — check_lm_suitability","text":"df Input data performing analysis. Must data frame columns NAME, RT SMILES. verbose logical value indicating whether print verbose output. nw number workers use parallel processing.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/check_lm_suitability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks which chemical descriptors are suitable for linear models — check_lm_suitability","text":"data frame predictors suitability status.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/check_lm_suitability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks which chemical descriptors are suitable for linear models — check_lm_suitability","text":"","code":"x <- check_lm_suitability(head(RP, 3), verbose = FALSE, nw = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect elements from a list of lists — collect","title":"Collect elements from a list of lists — collect","text":"function takes list lists inner list names. returns list element corresponds name inner list extracted inner list. Especially useful collecting results lapply.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect elements from a list of lists — collect","text":"","code":"collect(xx)"},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect elements from a list of lists — collect","text":"xx list lists inner list names.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect elements from a list of lists — collect","text":"list element corresponds name inner list extracted inner list.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/collect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect elements from a list of lists — collect","text":"","code":"xx <- lapply(1:3, function(i) list(a = i, b = i^2, c = i^3)) ret <- collect(xx)"},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":null,"dir":"Reference","previous_headings":"","what":"The FastRet GUI — fastret_app","title":"The FastRet GUI — fastret_app","text":"function creates FastRet GUI","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The FastRet GUI — fastret_app","text":"","code":"fastret_app(port = 8080, host = \"0.0.0.0\", reload = FALSE, nsw = 0)"},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The FastRet GUI — fastret_app","text":"port port application listen host address application listen reload Whether reload application source code changes nsw number subworkers worker allowed start. higher number, faster individual tasks like model fitting can processed.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The FastRet GUI — fastret_app","text":"shiny app. function returns shiny app can run interact model. object class shiny.appobj.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/fastret_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The FastRet GUI — fastret_app","text":"","code":"x <- fastret_app() if (interactive()) shiny::runApp(x)"},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Chemical Descriptors for a list of molecules — getCDs","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"Calculate Chemical Descriptors list molecules. Molecules can appear multiple times list.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"","code":"getCDs(df = read_rp_xlsx(), verbose = 1, nw = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"df dataframe two mandatory columns: \"NAME\" \"SMILES\" verbose 0: output, 1: progress, 2: progress warnings nw number workers parallel processing","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"dataframe chemical descriptor values appended columns input dataframe.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Chemical Descriptors for a list of molecules — getCDs","text":"","code":"cds <- getCDs(head(RP, 3), verbose = 1, nw = 1) #> 2024-06-24 13:42:26.05 Obtaining chemical descriptors for a dataframe of dimension 3 x 3 #> 2024-06-24 13:42:26.05 Calculating chemical descriptors #> 2024-06-24 13:42:26.05 Loading chemical descriptors for 'CCC(C(=O)O)O' from RAM cache #> 2024-06-24 13:42:26.05 Loading chemical descriptors for 'COC1=C(C=CC(=C1)CCN)O' from RAM cache #> 2024-06-24 13:42:26.05 Loading chemical descriptors for 'C1=NC2=C(N1)C(=NC=N2)N' from RAM cache #> 2024-06-24 13:42:26.05 Collecting results #> 2024-06-24 13:42:26.05 Finished calculating chemical descriptors in 0.005150318 secs"},{"path":"https://spang-lab.github.io/FastRet/reference/getCDsFor1Molecule.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Chemical Descriptors for a single molecule — getCDsFor1Molecule","title":"Get Chemical Descriptors for a single molecule — getCDsFor1Molecule","text":"Helper function getCDs(). Calculates chemical descriptors single molecule, specified SMILES string. function used directly. exported getCDs() can easily spawn background worker processes able call function.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDsFor1Molecule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Chemical Descriptors for a single molecule — getCDsFor1Molecule","text":"","code":"getCDsFor1Molecule(smi = \"O=C(O)CCCCCCCCCO\", cache = TRUE, verbose = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/getCDsFor1Molecule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Chemical Descriptors for a single molecule — getCDsFor1Molecule","text":"smi SMILES string molecule. cache TRUE, results cached RAM disk directory ~/.cache/FastRet/getCDsFor1Molecule/ speed subsequent calls. verbose Verbosity. 0: output, 1: show progress.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDsFor1Molecule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Chemical Descriptors for a single molecule — getCDsFor1Molecule","text":"dataframe dimension 1 x 241. rowname input SMILES string. colnames chemical descriptor features specified CDFeatures.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/getCDsFor1Molecule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Chemical Descriptors for a single molecule — getCDsFor1Molecule","text":"Chemical descriptors getCDs() calculated individually molecule. due inconsistent ordering output dataframes list IAtomContainer objects provided rcdk::eval.desc. Although input SMILES set rownames, match original input SMILES due unclear transformation, making mapping non-trivial. Calculating descriptors molecule molecule also enables parallelization getCDs().","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/getCDsFor1Molecule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Chemical Descriptors for a single molecule — getCDsFor1Molecule","text":"","code":"cds <- getCDsFor1Molecule(\"O=C(O)CCCCCCCCCO\", cache = TRUE, verbose = 0)"},{"path":"https://spang-lab.github.io/FastRet/reference/get_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get cache directory — get_cache_dir","title":"Get cache directory — get_cache_dir","text":"Creates returns cache directory FastRet package.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get cache directory — get_cache_dir","text":"","code":"get_cache_dir(subdir = NULL)"},{"path":"https://spang-lab.github.io/FastRet/reference/get_cache_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get cache directory — get_cache_dir","text":"subdir Optional subdirectory within cache directory.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get cache directory — get_cache_dir","text":"path cache directory subdirectory.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get cache directory — get_cache_dir","text":"","code":"path <- get_cache_dir()"},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract predictor names from an 'frm' object — get_predictors","title":"Extract predictor names from an 'frm' object — get_predictors","text":"function extracts predictor names 'frm' object.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract predictor names from an 'frm' object — get_predictors","text":"","code":"get_predictors(frm = train_frm())"},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract predictor names from an 'frm' object — get_predictors","text":"frm object class 'frm' extract predictor names.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract predictor names from an 'frm' object — get_predictors","text":"character vector predictor names.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/get_predictors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract predictor names from an 'frm' object — get_predictors","text":"","code":"frm <- read_rp_lasso_model_rds() get_predictors(frm) #>   [1] \"Fsp3\"             \"nSmallRings\"      \"nAromRings\"       #>   [4] \"nRingBlocks\"      \"nAromBlocks\"      \"nRings5\"          #>   [7] \"nRings6\"          \"tpsaEfficiency\"   \"Zagreb\"           #>  [10] \"XLogP\"            \"WPATH\"            \"WPOL\"             #>  [13] \"WTPT.1\"           \"WTPT.2\"           \"WTPT.3\"           #>  [16] \"WTPT.4\"           \"WTPT.5\"           \"MW\"               #>  [19] \"VAdjMat\"          \"TopoPSA\"          \"LipinskiFailures\" #>  [22] \"nRotB\"            \"topoShape\"        \"PetitjeanNumber\"  #>  [25] \"MDEC.12\"          \"MDEC.13\"          \"MDEC.22\"          #>  [28] \"MDEC.23\"          \"MDEC.33\"          \"MDEO.11\"          #>  [31] \"MDEO.12\"          \"MDEN.13\"          \"MDEN.22\"          #>  [34] \"MDEN.23\"          \"MLogP\"            \"nAtomP\"           #>  [37] \"nAtomLC\"          \"khs.sCH3\"         \"khs.ssCH2\"        #>  [40] \"khs.dsCH\"         \"khs.aaCH\"         \"khs.sssCH\"        #>  [43] \"khs.dssC\"         \"khs.aasC\"         \"khs.aaaC\"         #>  [46] \"khs.sNH2\"         \"khs.ssNH\"         \"khs.aaNH\"         #>  [49] \"khs.aaN\"          \"khs.aasN\"         \"khs.sOH\"          #>  [52] \"khs.dO\"           \"khs.ssO\"          \"khs.dsssP\"        #>  [55] \"Kier1\"            \"Kier2\"            \"HybRatio\"         #>  [58] \"nHBDon\"           \"nHBAcc\"           \"fragC\"            #>  [61] \"FMF\"              \"ECCEN\"            \"SP.0\"             #>  [64] \"SP.1\"             \"SP.2\"             \"SP.3\"             #>  [67] \"SP.4\"             \"SP.5\"             \"SP.6\"             #>  [70] \"SP.7\"             \"VP.1\"             \"VP.2\"             #>  [73] \"VP.3\"             \"VP.4\"             \"VP.5\"             #>  [76] \"VP.6\"             \"VP.7\"             \"SPC.4\"            #>  [79] \"SPC.5\"            \"SPC.6\"            \"VPC.4\"            #>  [82] \"VPC.5\"            \"VPC.6\"            \"SC.3\"             #>  [85] \"SC.4\"             \"SC.5\"             \"VC.3\"             #>  [88] \"VC.4\"             \"VC.5\"             \"SCH.5\"            #>  [91] \"SCH.6\"            \"SCH.7\"            \"VCH.5\"            #>  [94] \"VCH.6\"            \"VCH.7\"            \"C1SP2\"            #>  [97] \"C2SP2\"            \"C3SP2\"            \"C1SP3\"            #> [100] \"C2SP3\"            \"bpol\"             \"nB\"               #> [103] \"nBase\"            \"ATSp1\"            \"ATSp2\"            #> [106] \"ATSp3\"            \"ATSp4\"            \"ATSp5\"            #> [109] \"ATSm1\"            \"ATSm2\"            \"ATSm3\"            #> [112] \"ATSm4\"            \"ATSm5\"            \"nAtom\"            #> [115] \"nAromBond\"        \"naAromAtom\"       \"apol\"             #> [118] \"ALogP\"            \"ALogp2\"           \"AMR\"              #> [121] \"nAcid\"            \"nA\"               \"nG\""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize log directory — init_log_dir","title":"Initialize log directory — init_log_dir","text":"function initializes log directory session. creates new directory exist.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize log directory — init_log_dir","text":"","code":"init_log_dir(SE)"},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize log directory — init_log_dir","text":"SE list containing session information.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize log directory — init_log_dir","text":"Updates logdir element SE list path log directory.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/init_log_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize log directory — init_log_dir","text":"","code":"SE <- as.environment(list(session = list(token = \"asdf\"))) init_log_dir(SE) #> 2024-06-24 13:42:26.61 Start: init_log_dir #> 2024-06-24 13:42:26.61 Logdir: /tmp/Rtmp6M7WuK/FastRet/asdf dir.exists(SE$logdir) #> [1] TRUE"},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":null,"dir":"Reference","previous_headings":"","what":"now function — now","title":"now function — now","text":"function returns current system time formatted according provided format string.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"now function — now","text":"","code":"now(format = \"%Y-%m-%d %H:%M:%OS2\")"},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"now function — now","text":"format string representing desired time format. Default \"%Y-%m-%d %H:%M:%OS2\".","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"now function — now","text":"string representing current system time specified format.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/now.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"now function — now","text":"","code":"now()            # e.g. \"2024-06-12 16:09:32.41\" #> [1] \"2024-06-24 13:42:26.77\" now(\"%H:%M:%S\")  # e.g. \"16:09:32\" #> [1] \"13:42:26\""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Get package file — pkg_file","title":"Get package file — pkg_file","text":"Returns path file within FastRet package.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get package file — pkg_file","text":"","code":"pkg_file(path, mustWork = FALSE)"},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get package file — pkg_file","text":"path path file within package. mustWork TRUE, error thrown file exist.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get package file — pkg_file","text":"path file.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/pkg_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get package file — pkg_file","text":"","code":"path <- pkg_file(\"extdata/RP.xlsx\")"},{"path":"https://spang-lab.github.io/FastRet/reference/plot_lm_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the suitability of predictors for linear models — plot_lm_suitability","title":"Plot the suitability of predictors for linear models — plot_lm_suitability","text":"function creates one pdf page every predictor inside slist$X. pdf page consists following three plots shown next : Histogram Density plot Scatterplot slist$df$RT name predictor, suitability, status checks missing values, near-zero variance, outliers shown title plot.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/plot_lm_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the suitability of predictors for linear models — plot_lm_suitability","text":"","code":"plot_lm_suitability(   slist = check_lm_suitability(),   pdfpath = tempfile(\"lm_suitability\", fileext = \".pdf\"),   descs = NULL )"},{"path":"https://spang-lab.github.io/FastRet/reference/plot_lm_suitability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the suitability of predictors for linear models — plot_lm_suitability","text":"slist list containing data frame df, matrix X, data frame V check_lm_suitability(). pdfpath path pdf file save plots. descs Index chemical descriptors plot. Leave NULL plot chemical descriptors.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/plot_lm_suitability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the suitability of predictors for linear models — plot_lm_suitability","text":"return value. function used side effect creating pdf file plots.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/plot_lm_suitability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the suitability of predictors for linear models — plot_lm_suitability","text":"","code":"df <- head(RP, 3) slist <- check_lm_suitability(df, verbose = FALSE, nw = 1) plot_lm_suitability(slist, descs = 1:5) #> 2024-06-24 13:42:27.10 Plotting suitability of predictors for linear models to file '/tmp/Rtmp6M7WuK/lm_suitability1f965c2c338c.pdf' #> 2024-06-24 13:42:27.13 [1/5] nSmallRings (PLOTTED SUCCESSFULLY) #> 2024-06-24 13:42:27.13 [2/5] nAromRings (PLOTTED SUCCESSFULLY) #> 2024-06-24 13:42:27.13 [3/5] nRingBlocks (PLOTTED SUCCESSFULLY) #> 2024-06-24 13:42:27.13 [4/5] nAromBlocks (PLOTTED SUCCESSFULLY) #> 2024-06-24 13:42:27.14 [5/5] nRings3 (PLOTTED SUCCESSFULLY)"},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict retention times using a FastRet Model — predict.frm","title":"Predict retention times using a FastRet Model — predict.frm","text":"Predict retention times new data using FastRet Model (FRM).","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict retention times using a FastRet Model — predict.frm","text":"","code":"# S3 method for frm predict(object = train_frm(), df = object$df, adjust = NULL, verbose = 0, ...)"},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict retention times using a FastRet Model — predict.frm","text":"object object class frm returned train_frm(). df data.frame columns training data. adjust object adjusted using adjust_frm(), contain property object$adj. adjust TRUE, object$adj used adjust predictions obtained object$model. FALSE object$adj ignored. NULL, object$model used, available. verbose logical value indicating whether print progress messages. ... used. Required match generic signature predict().","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict retention times using a FastRet Model — predict.frm","text":"numeric vector predicted retention times.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/predict.frm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict retention times using a FastRet Model — predict.frm","text":"","code":"frm <- read_rp_lasso_model_rds() newdata <- head(RP) yhat <- predict(frm, newdata)"},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess data — preprocess_data","title":"Preprocess data — preprocess_data","text":"Preprocess data can used input train_frm().","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess data — preprocess_data","text":"","code":"preprocess_data(   data = read_rp_xlsx(),   degree_polynomial = 1,   interaction_terms = FALSE,   verbose = 1,   nw = 1 )"},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess data — preprocess_data","text":"data dataframe columns RT, NAME, SMILES degree_polynomial defines many polynomials get added (3 quadratic cubic terms get added) interaction_terms TRUE interaction terms get added data set verbose 0 == output, 1 == show progress, 2 == show progress warnings nw number workers use parallel processing","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess data — preprocess_data","text":"dataframe preprocessed data","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/preprocess_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess data — preprocess_data","text":"","code":"data <- head(RP, 3) pre <- preprocess_data(data, verbose = 0)"},{"path":"https://spang-lab.github.io/FastRet/reference/ram_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"RAM Cache Environment — ram_cache","title":"RAM Cache Environment — ram_cache","text":"environment used caching data RAM.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/ram_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RAM Cache Environment — ram_cache","text":"","code":"ram_cache"},{"path":"https://spang-lab.github.io/FastRet/reference/ram_cache.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RAM Cache Environment — ram_cache","text":"environment following elements: CDs: data frame. column names CDs chemical descriptors listed CDFeatures. rownames CDs SMILES strings. CDRowNr: list. names list elements equal rownames CDs. values indices rows CDs data frame.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/ram_cache.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RAM Cache Environment — ram_cache","text":"environment used getCDsFor1Molecule() store results previous calculations speed subsequent calls. gets initalized upon first call getCDsFor1Molecule() chemical descriptors molecules available RP dataset HILIC dataset Retip package.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/ram_cache.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RAM Cache Environment — ram_cache","text":"Retip: Retention Time Prediction Compound Annotation Untargeted Metabolomics Paolo Bonini, Tobias Kind, Hiroshi Tsugawa, Dinesh Kumar Barupal, Oliver Fiehn Analytical Chemistry 2020 92 (11), 7515-7522 DOI: 10.1021/acs.analchem.9b05765","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/ram_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RAM Cache Environment — ram_cache","text":"","code":"dim(ram_cache$CDs) # 0 241 #> [1] 1316  241 cds <- getCDsFor1Molecule(cache = TRUE, verbose = TRUE) #> 2024-06-24 13:42:27.72 Loading chemical descriptors for 'O=C(O)CCCCCCCCCO' from RAM cache dim(ram_cache$CDs) # 1316 241 #> [1] 1316  241 ram_cache$CDRowNr[[\"COC1=C(C=CC(=C1)CCN)O\"]] # 2 #> [1] 2 ram_cache$CDs[1:10, 1:3] #>                                                                Fsp3 nSmallRings #> CCC(C(=O)O)O                                              0.7500000           0 #> COC1=C(C=CC(=C1)CCN)O                                     0.3333333           1 #> C1=NC2=C(N1)C(=NC=N2)N                                    0.0000000           2 #> C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)O)O          0.5000000           3 #> C1C2C(C(C(O2)N3C=NC4=C3N=CN=C4N)O)OP(=O)(O1)O             0.5000000           4 #> C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)OP(=O)(O)O)O 0.5000000           3 #> [O-]C(=O)C[C@H](O)C[N+](C)(C)C                            0.8571429           0 #> C[N+](C)(CCOP([O-])(OCC(O)CO)=O)C                         1.0000000           0 #> CN1C=C(N=C1)CC(C(=O)O)N                                   0.4285714           1 #> C(CC(=O)O)CN                                              0.7500000           0 #>                                                           nAromRings #> CCC(C(=O)O)O                                                       0 #> COC1=C(C=CC(=C1)CCN)O                                              1 #> C1=NC2=C(N1)C(=NC=N2)N                                             2 #> C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)O)O                   2 #> C1C2C(C(C(O2)N3C=NC4=C3N=CN=C4N)O)OP(=O)(O1)O                      2 #> C1=NC2=C(C(=N1)N)N=CN2C3C(C(C(O3)COP(=O)(O)O)OP(=O)(O)O)O          2 #> [O-]C(=O)C[C@H](O)C[N+](C)(C)C                                     0 #> C[N+](C)(CCOP([O-])(OCC(O)CO)=O)C                                  0 #> CN1C=C(N=C1)CC(C(=O)O)N                                            1 #> C(CC(=O)O)CN                                                       0"},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read the HILIC dataset from Retip the package — read_retip_hilic_data","title":"Download and read the HILIC dataset from Retip the package — read_retip_hilic_data","text":"Downloads reads HILIC dataset Retip package. dataset downloaded https://github.com/oloBion/Retip/raw/master/data/HILIC.RData, saved temporary file read returned.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read the HILIC dataset from Retip the package — read_retip_hilic_data","text":"","code":"read_retip_hilic_data(verbose = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read the HILIC dataset from Retip the package — read_retip_hilic_data","text":"verbose Verbosity level. 1 == print progress messages, 0 == progress messages.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and read the HILIC dataset from Retip the package — read_retip_hilic_data","text":"df data frame containing HILIC dataset.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download and read the HILIC dataset from Retip the package — read_retip_hilic_data","text":"Retip: Retention Time Prediction Compound Annotation Untargeted Metabolomics Paolo Bonini, Tobias Kind, Hiroshi Tsugawa, Dinesh Kumar Barupal, Oliver Fiehn Analytical Chemistry 2020 92 (11), 7515-7522 DOI: 10.1021/acs.analchem.9b05765","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_retip_hilic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read the HILIC dataset from Retip the package — read_retip_hilic_data","text":"","code":"df <- read_retip_hilic_data(verbose = 0)"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":null,"dir":"Reference","previous_headings":"","what":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"Read LASSO model trained RP dataset using train_frm().","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"","code":"read_rp_lasso_model_rds()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"frm object.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_lasso_model_rds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LASSO Model trained on RP dataset — read_rp_lasso_model_rds","text":"","code":"frm <- read_rp_lasso_model_rds()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"Read retention time data reverse phase liquid chromatography measured temperature 35 degree flowrate 0.3ml/min. data also exists dataframe package. use directly R just enter RP.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"","code":"read_rp_xlsx()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"Measured functional genomics lab University Regensburg.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"dataframe 442 metabolites columns RT, SMILES NAME.","code":""},{"path":[]},{"path":"https://spang-lab.github.io/FastRet/reference/read_rp_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read retention times (RT) measured on a reverse phase (RP) column — read_rp_xlsx","text":"","code":"# \\donttest{ x <- read_rp_xlsx() all.equal(x, RP) #> [1] TRUE # }"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Hypothetical retention times (RT) measured on a reverse phase (RP) column — read_rpadj_xlsx","title":"Hypothetical retention times (RT) measured on a reverse phase (RP) column — read_rpadj_xlsx","text":"Subset data read_rp_xlsx() slight modifications simulate changes temperature /flowrate.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hypothetical retention times (RT) measured on a reverse phase (RP) column — read_rpadj_xlsx","text":"","code":"read_rpadj_xlsx()"},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hypothetical retention times (RT) measured on a reverse phase (RP) column — read_rpadj_xlsx","text":"dataframe 25 rows (metabolites) 3 columns RT, SMILES NAME.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/read_rpadj_xlsx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hypothetical retention times (RT) measured on a reverse phase (RP) column — read_rpadj_xlsx","text":"","code":"# \\donttest{ x <- read_rpadj_xlsx() # }"},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":null,"dir":"Reference","previous_headings":"","what":"Selective Measuring — selective_measuring","title":"Selective Measuring — selective_measuring","text":"function adjust_frm() used modify existing FastRet models based changes chromatographic conditions. requires set molecules measured retention times original new column. function selects sensible subset molecules original dataset re-measurement. selection process includes: Generating chemical descriptors SMILES strings molecules. features used train_frm() adjust_frm(). Standardizing chemical descriptors zero mean unit variance. Training Ridge Regression model standardized chemical descriptors features retention times target variable. Scaling chemical descriptors coefficients Ridge Regression model. Applying PAM clustering entire dataset, includes scaled chemical descriptors retention times. Returning clustering results, include cluster assignments, medoid indicators, raw data.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selective Measuring — selective_measuring","text":"","code":"selective_measuring(raw_data, k_cluster = 25, verbose = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selective Measuring — selective_measuring","text":"raw_data raw data processed. Must dataframe columns NAME, RT SMILES. k_cluster number clusters PAM clustering. verbose level verbosity.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selective Measuring — selective_measuring","text":"list containing following elements: clustering: data frame raw data, cluster assignments, medoid indicators clobj: PAM clustering object coefs: coefficients Ridge Regression model model: Ridge Regression model df: preprocessed data dfz: standardized features dfzb: features scaled coefficients Ridge Regression model","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/selective_measuring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selective Measuring — selective_measuring","text":"","code":"# \\donttest{ x <- selective_measuring(RP[1:50, ], k = 5, verbose = 0) # For the sake of a short runtime, only the first 50 rows of the RP dataset # were used in this example. In practice, you should always use the entire # dataset to find the optimal subset for re-measurement. # }"},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the FastRet GUI — start_gui","title":"Start the FastRet GUI — start_gui","text":"Starts FastRet GUI","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the FastRet GUI — start_gui","text":"","code":"start_gui(port = 8080, host = \"0.0.0.0\", reload = FALSE, nw = 2, nsw = 1)"},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start the FastRet GUI — start_gui","text":"port port application listen host address application listen reload Whether reload application source code changes nw number worker processes started. first worker always listens user input GUI. workers used handling long running tasks like model fitting clustering. nw 1, process used tasks, means GUI become unresponsive long running tasks. nsw number subworkers worker allowed start. higher number, faster individual tasks like model fitting can processed. value 1 means subprocesses run sequentially.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the FastRet GUI — start_gui","text":"shiny app. function returns shiny app can run interact model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start the FastRet GUI — start_gui","text":"set nw = 3 nsw = 4, least 16 cores, one core shiny main process. Three cores three worker processes. 12 cores (3 * 4) subworkers. default case, nworkers = 1 nsw = 2, least 4 cores.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/start_gui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start the FastRet GUI — start_gui","text":"","code":"if (interactive()) start_gui()"},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a new FastRet model (FRM) for retention time prediction — train_frm","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"Trains new model molecule SMILES predict retention times (RT) using specified method.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"","code":"train_frm(   df = read_rp_xlsx(),   method = \"lasso\",   verbose = 1,   nfolds = 5,   nw = 1,   degree_polynomial = 1,   interaction_terms = FALSE,   rm_near_zero_var = TRUE,   rm_na = TRUE,   rm_ns = FALSE,   seed = NULL )"},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"df dataframe columns \"NAME\", \"RT\", \"SMILES\" optionally set chemical descriptors. chemical descriptors provided, calculated using function preprocess_data(). method string representing prediction algorithm. Either \"lasso\", \"ridge\" \"gbtree\". verbose logical value indicating whether print progress messages. nfolds integer representing number folds cross validation. nw integer representing number workers parallel processing. degree_polynomial integer representing degree polynomial. Polynomials specified degree included model. interaction_terms logical value indicating whether include interaction terms model. rm_near_zero_var logical value indicating whether remove near zero variance predictors. Setting TRUE can cause CV results overoptimistic, variance filtering done whole dataset, .e. information test folds used feature selection. rm_na logical value indicating whether remove NA values. Setting TRUE can cause CV results overoptimistic, variance filtering done whole dataset, .e. information test folds used feature selection. rm_ns logical value indicating whether remove chemical descriptors considered suitable linear regression based previous analysis independent dataset. See check_lm_suitability() details analysis. seed integer value set seed random number generation allow reproducible results.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"trained FastRet model.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"Setting rm_near_zero_var /rm_na TRUE can cause CV results overoptimistic, predictor filtering done whole dataset, .e. information test folds used feature selection.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/train_frm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train a new FastRet model (FRM) for retention time prediction — train_frm","text":"","code":"# \\donttest{ system.time(m <- train_frm(RP[1:80, ], method = \"lasso\", nfolds = 2, nw = 1, verbose = 0)) #>    user  system elapsed  #>   0.440   0.000   0.439  # For the sake of a short runtime, only the first 80 rows of the RP dataset # are used in this example. In practice, you should always use the entire # training dataset for model training. # }"},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add line end — withLineEnd","title":"Add line end — withLineEnd","text":"function checks string ends newline character. , adds one.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add line end — withLineEnd","text":"","code":"withLineEnd(x)"},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add line end — withLineEnd","text":"x string.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add line end — withLineEnd","text":"input string newline character end already present.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withLineEnd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add line end — withLineEnd","text":"","code":"cat(withLineEnd(\"Hello\")) #> Hello"},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute an expression while redirecting output to a file — withSink","title":"Execute an expression while redirecting output to a file — withSink","text":"Execute expression redirecting output file","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute an expression while redirecting output to a file — withSink","text":"","code":"withSink(expr, logfile = tempfile(fileext = \".txt\"))"},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute an expression while redirecting output to a file — withSink","text":"expr expression execute logfile file redirect output . Default \"tmp.txt\".","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute an expression while redirecting output to a file — withSink","text":"result expression","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withSink.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute an expression while redirecting output to a file — withSink","text":"","code":"logfile <- tempfile(fileext = \".txt\") withSink(logfile = logfile, expr = {   cat(\"Helloworld\\n\")   message(\"Goodbye\") }) #> Goodbye readLines(logfile) == c(\"Helloworld\", \"Goodbye\") #> [1]  TRUE FALSE"},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute an expression and print an error message if it fails — withStopMessage","title":"Execute an expression and print an error message if it fails — withStopMessage","text":"Execute expression print error message fails","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute an expression and print an error message if it fails — withStopMessage","text":"","code":"withStopMessage(expr)"},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute an expression and print an error message if it fails — withStopMessage","text":"expr expression execute","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute an expression and print an error message if it fails — withStopMessage","text":"result expression","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withStopMessage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute an expression and print an error message if it fails — withStopMessage","text":"","code":"f <- function(expr) {   val <- try(expr, silent = TRUE)   err <- if (inherits(val, \"try-error\")) attr(val, \"condition\") else NULL   if (!is.null(err)) value <- NULL   list(value = val, error = err) } ret <- f(log(\"a\")) # this error will not show up in the console ret <- f(withStopMessage(log(\"a\"))) # this error will show up in the console #> Error in log(\"a\") : non-numeric argument to mathematical function"},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute an expression with a timeout — withTimeout","title":"Execute an expression with a timeout — withTimeout","text":"Execute expression timeout","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute an expression with a timeout — withTimeout","text":"","code":"withTimeout(expr, timeout = 2)"},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute an expression with a timeout — withTimeout","text":"expr expression execute timeout timeout seconds. Default 2.","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute an expression with a timeout — withTimeout","text":"result expression","code":""},{"path":"https://spang-lab.github.io/FastRet/reference/withTimeout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute an expression with a timeout — withTimeout","text":"","code":"withTimeout(cat(\"This works\\n\"), timeout = 0.2) #> This works try(withTimeout({Sys.sleep(0.2); cat(\"This will fail\\n\")}, timeout = 0.1)) #> This will fail"},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-113","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.3","title":"FastRet 1.1.3","text":"Comment 1: Please modify .GlobalEnv. allowed CRAN policies. -> R/patch.R Solution: Moved patch.R R folder misc/scripts, excluded package build using .Rbuildignore. file conditionally sourced private function start_gui_in_devmode() available, allowing use development without including package. Comment 2: *Please add .Rd files regarding exported methods explain functions’ results documentation. Please write structure output (class) also output means. (function return value, document , e.g.,  similar) -> Missing Rd-tags: adjust_frm.Rd: , analyzeCDNames.Rd: , getCDs.Rd: , getCDsFor1Molecule.Rd: , read_rpadj_xlsx.Rd: Solution: Added \\value tags mentioned .Rd files describing functions’ return values. Comment 3: references describing methods package, please add description field DESCRIPTION file form authors (year) <doi:…> authors (year, ISBN:…) available: <https:…> space ‘doi:’, ‘https:’ angle brackets auto-linking. (want add title well please put quotes: “Title”) Solution: Added Bonini et al. (2020) doi:10.1021/acs.analchem.9b05765 reference description part DESCRIPTION file, listing Related work. reference used documentation read_retip_hilic_data() ram_cache. additional references used package documentation. Added Fadi Fadil contributor. Fadi measured example datasets shipped FastRet. Added ORCID IDs contributors described CRAN’s checklist submissions.","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-112","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.2","title":"FastRet 1.1.2","text":"Wrapped examples read_rp_xlsx() read_rpadj_xlsx() donttest prevent note Examples CPU time > 2.5 times elapsed time: .... now ’m pretty sure culprit xlsx package, uses java process reading file. Maybe switch openxlsx readxl future.","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-111","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.1","title":"FastRet 1.1.1","text":"Improved examples preprocess_data() prevent note Examples CPU time > 2.5 times elapsed time: preprocess_data (CPU=2.772, elapsed=0.788).","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-110","dir":"Changelog","previous_headings":"","what":"FastRet 1.1.0","title":"FastRet 1.1.0","text":"Added RAM caching getCDs()","code":""},{"path":"https://spang-lab.github.io/FastRet/news/index.html","id":"fastret-103","dir":"Changelog","previous_headings":"","what":"FastRet 1.0.3","title":"FastRet 1.0.3","text":"Initial CRAN Submission. Rejected following examples caused least one following notes CRAN testing machines: CPU time > 5s, CPU time > 2.5 times elapsed time. context, CPU time calculated sum measured user system times.","code":""}]
